{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/dashboard",
      "destination": "/",
      "statusCode": 308,
      "regex": "^(?!/_next)/dashboard(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/api/(.*)",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "http://localhost:3000"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization"
        }
      ],
      "regex": "^/api(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/demo",
      "regex": "^/demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/demo(?:/)?$"
    },
    {
      "page": "/faculty",
      "regex": "^/faculty(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faculty(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/hod",
      "regex": "^/hod(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/hod(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/qr-generator",
      "regex": "^/qr\\-generator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/qr\\-generator(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/register/complete",
      "regex": "^/register/complete(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register/complete(?:/)?$"
    },
    {
      "page": "/security",
      "regex": "^/security(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/security(?:/)?$"
    },
    {
      "page": "/securityincharge",
      "regex": "^/securityincharge(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/securityincharge(?:/)?$"
    },
    {
      "page": "/securityincharge/keys",
      "regex": "^/securityincharge/keys(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/securityincharge/keys(?:/)?$"
    },
    {
      "page": "/securityincharge/reports",
      "regex": "^/securityincharge/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/securityincharge/reports(?:/)?$"
    },
    {
      "page": "/securityincharge/scan",
      "regex": "^/securityincharge/scan(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/securityincharge/scan(?:/)?$"
    },
    {
      "page": "/securityincharge/users",
      "regex": "^/securityincharge/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/securityincharge/users(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}