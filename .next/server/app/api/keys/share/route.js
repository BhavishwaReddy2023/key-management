/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/keys/share/route";
exports.ids = ["app/api/keys/share/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/[...nextauth]/route.js":
/*!*********************************************!*\
  !*** ./app/api/auth/[...nextauth]/route.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ handler),\n/* harmony export */   POST: () => (/* binding */ handler),\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"(rsc)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var _lib_userRoles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/userRoles */ \"(rsc)/./lib/userRoles.js\");\n\n\n\n// Define role-based access control\nconst ROLE_MAPPINGS = {\n    // Admin emails\n    'admin@vnrvjiet.in': 'admin',\n    'principal@vnrvjiet.in': 'admin',\n    // HOD emails (you can add specific HOD emails here)\n    'hod.cse@vnrvjiet.in': 'hod',\n    'hod.ece@vnrvjiet.in': 'hod',\n    'hod.eee@vnrvjiet.in': 'hod',\n    'hod.mech@vnrvjiet.in': 'hod',\n    'hod.civil@vnrvjiet.in': 'hod',\n    // Security staff emails\n    'security@vnrvjiet.in': 'security',\n    'security.head@vnrvjiet.in': 'security_head'\n};\n// Function to determine user role based on email\nfunction getUserRole(email, req = null) {\n    console.log(`üîç getUserRole called for ${email}`);\n    // First, check if user has a selected role stored\n    const storedRole = (0,_lib_userRoles__WEBPACK_IMPORTED_MODULE_2__.getUserRole)(email);\n    if (storedRole) {\n        console.log(`‚úÖ Using stored role for ${email}: ${storedRole}`);\n        return storedRole;\n    }\n    console.log(`‚ö†Ô∏è No stored role found for ${email}, checking fallbacks...`);\n    // Check for pending role from cookie (during registration)\n    // This is a fallback for when the role hasn't been stored yet\n    if (req && req.cookies) {\n        const pendingRole = req.cookies.get('pendingUserRole')?.value;\n        if (pendingRole) {\n            console.log(`üéØ Using pending role for ${email}: ${pendingRole}`);\n            // Store the role for future use\n            (0,_lib_userRoles__WEBPACK_IMPORTED_MODULE_2__.setUserRole)(email, pendingRole, 'registration');\n            return pendingRole;\n        }\n    }\n    // Check direct role mappings (for admin/special accounts)\n    if (ROLE_MAPPINGS[email]) {\n        console.log(`üìã Using mapped role for ${email}: ${ROLE_MAPPINGS[email]}`);\n        return ROLE_MAPPINGS[email];\n    }\n    // Check email patterns for different roles (legacy fallback)\n    if (email.includes('hod.') && email.endsWith('@vnrvjiet.in')) {\n        console.log(`üè¢ Using HOD role for ${email}`);\n        return 'hod';\n    }\n    if (email.includes('security') && email.endsWith('@vnrvjiet.in')) {\n        console.log(`üîí Using security role for ${email}`);\n        return 'security';\n    }\n    // Default role for vnrvjiet.in domain\n    if (email.endsWith('@vnrvjiet.in')) {\n        console.log(`üë®‚Äçüè´ Using default faculty role for ${email}`);\n        return 'faculty';\n    }\n    // For other domains, deny access\n    console.log(`‚ùå Access denied for ${email} - invalid domain`);\n    return null // This will prevent sign-in\n    ;\n}\n// Function to get department from email\nfunction getDepartmentFromEmail(email) {\n    const emailParts = email.split('@')[0];\n    if (emailParts.includes('cse')) return 'Computer Science and Engineering';\n    if (emailParts.includes('ece')) return 'Electronics and Communication Engineering';\n    if (emailParts.includes('eee')) return 'Electrical and Electronics Engineering';\n    if (emailParts.includes('mech')) return 'Mechanical Engineering';\n    if (emailParts.includes('civil')) return 'Civil Engineering';\n    if (emailParts.includes('it')) return 'Information Technology';\n    // Default department\n    return 'General';\n}\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.GOOGLE_CLIENT_ID,\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET\n        })\n    ],\n    callbacks: {\n        async signIn ({ user }) {\n            // Check if user is allowed to sign in based on email domain\n            const role = getUserRole(user.email);\n            if (!role) {\n                console.log(`Sign-in denied for email: ${user.email}`);\n                return false // Deny sign-in\n                ;\n            }\n            return true // Allow sign-in\n            ;\n        },\n        async jwt ({ token, user, trigger }) {\n            const email = user?.email || token.email;\n            if (user) {\n                // Initial sign-in: Add basic info to token\n                token.email = user.email;\n                token.department = getDepartmentFromEmail(user.email);\n                token.employeeId = user.email.split('@')[0]; // Use email prefix as employee ID\n            }\n            // Always check for the most current role (both initial and refresh)\n            if (email) {\n                const currentRole = getUserRole(email);\n                if (currentRole) {\n                    const roleChanged = token.role !== currentRole;\n                    token.role = currentRole;\n                    if (user) {\n                        console.log(`üîë JWT created for ${email} with role: ${token.role}`);\n                    } else if (roleChanged || trigger === 'update') {\n                        console.log(`üîÑ JWT role updated for ${email}: ${token.role} (trigger: ${trigger || 'refresh'})`);\n                    }\n                }\n            }\n            // Get user ID from database\n            if (email) {\n                try {\n                    const { connectDB } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_mongodb_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\"));\n                    const User = (await __webpack_require__.e(/*! import() */ \"_rsc_models_User_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../models/User */ \"(rsc)/./models/User.js\"))).default;\n                    await connectDB();\n                    const dbUser = await User.findOne({\n                        email\n                    });\n                    if (dbUser) {\n                        token.dbUserId = dbUser._id.toString();\n                        console.log(`üÜî Set database user ID in token: ${token.dbUserId}`);\n                    }\n                } catch (error) {\n                    console.error('Error getting user ID:', error);\n                }\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            // Add role, department, and ID to session\n            if (token) {\n                session.user.id = token.dbUserId; // This is the MongoDB user ID\n                session.user.role = token.role;\n                session.user.department = token.department;\n                session.user.employeeId = token.employeeId;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/login',\n        error: '/login'\n    },\n    session: {\n        strategy: 'jwt'\n    },\n    secret: process.env.NEXTAUTH_SECRET\n};\nconst handler = next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/[...nextauth]/route.js\n");

/***/ }),

/***/ "(rsc)/./app/api/keys/share/route.js":
/*!*************************************!*\
  !*** ./app/api/keys/share/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../auth/[...nextauth]/route */ \"(rsc)/./app/api/auth/[...nextauth]/route.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\");\n/* harmony import */ var _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../models/KeySharing */ \"(rsc)/./models/KeySharing.js\");\n/* harmony import */ var _models_KeyAssignment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../models/KeyAssignment */ \"(rsc)/./models/KeyAssignment.js\");\n/* harmony import */ var _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../models/KeyTransaction */ \"(rsc)/./models/KeyTransaction.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../models/User */ \"(rsc)/./models/User.js\");\n/* harmony import */ var _lib_emailService__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../lib/emailService */ \"(rsc)/./lib/emailService.js\");\n\n\n\n\n\n\n\n\n\nasync function GET(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__.connectDB)();\n        const { searchParams } = new URL(request.url);\n        const type = searchParams.get('type'); // 'faculty-list', 'my-shares', 'received-shares'\n        const userId = session.user.id;\n        switch(type){\n            case 'faculty-list':\n                // Get list of faculty members for sharing\n                const faculty = await _models_User__WEBPACK_IMPORTED_MODULE_7__[\"default\"].find({\n                    role: 'faculty',\n                    department: session.user.department,\n                    _id: {\n                        $ne: userId\n                    },\n                    isActive: true\n                }).select('name email department');\n                const facultyList = faculty.map((f)=>({\n                        id: f._id,\n                        name: f.name,\n                        email: f.email,\n                        department: f.department\n                    }));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    faculty: facultyList\n                });\n            case 'my-shares':\n                // Get keys shared by current user\n                const myShares = await _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"].find({\n                    sharedBy: userId,\n                    status: 'active'\n                }).populate('keyId', 'name labName labNumber').populate('sharedWith', 'name email');\n                const shares = myShares.map((share)=>({\n                        id: share._id,\n                        keyName: share.keyId.name,\n                        labName: share.keyId.labName,\n                        recipient: share.sharedWith.name,\n                        recipientEmail: share.sharedWith.email,\n                        sharedDate: share.sharedDate,\n                        expiresAt: share.expiresAt,\n                        duration: share.duration,\n                        message: share.message\n                    }));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    shares\n                });\n            case 'received-shares':\n                // Get keys shared with current user\n                const receivedShares = await _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"].find({\n                    sharedWith: userId,\n                    status: 'active'\n                }).populate('keyId', 'name labName labNumber').populate('sharedBy', 'name email');\n                const received = receivedShares.map((share)=>({\n                        id: share._id,\n                        keyName: share.keyId.name,\n                        labName: share.keyId.labName,\n                        sharedBy: share.sharedBy.name,\n                        sharedByEmail: share.sharedBy.email,\n                        sharedDate: share.sharedDate,\n                        expiresAt: share.expiresAt,\n                        duration: share.duration,\n                        message: share.message\n                    }));\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    received\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Invalid type parameter'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Error fetching sharing data:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { action, data } = await request.json();\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__.connectDB)();\n        switch(action){\n            case 'share-key':\n                // Verify the user has access to the key\n                const assignment = await _models_KeyAssignment__WEBPACK_IMPORTED_MODULE_5__[\"default\"].findOne({\n                    keyId: data.keyId,\n                    facultyId: session.user.id,\n                    status: 'active'\n                });\n                if (!assignment) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'You do not have access to this key'\n                    }, {\n                        status: 403\n                    });\n                }\n                // Resolve recipient ID - if it's an employee ID, find the actual user\n                let recipientUserId = data.recipientId;\n                // Check if recipientId is a valid MongoDB ObjectId\n                const mongoose = __webpack_require__(/*! mongoose */ \"mongoose\");\n                if (!mongoose.Types.ObjectId.isValid(data.recipientId)) {\n                    // It's likely an employee ID, find the user by employeeId\n                    const recipientUser = await _models_User__WEBPACK_IMPORTED_MODULE_7__[\"default\"].findOne({\n                        employeeId: data.recipientId\n                    });\n                    if (!recipientUser) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: 'Recipient user not found'\n                        }, {\n                            status: 404\n                        });\n                    }\n                    recipientUserId = recipientUser._id;\n                }\n                // Check if key is already shared with this person\n                const existingShare = await _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findOne({\n                    keyId: data.keyId,\n                    sharedBy: session.user.id,\n                    sharedWith: recipientUserId,\n                    status: 'active'\n                });\n                if (existingShare) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Key is already shared with this person'\n                    }, {\n                        status: 400\n                    });\n                }\n                // Create sharing record\n                const durationHours = parseInt(data.duration);\n                const expiresAt = new Date(Date.now() + durationHours * 60 * 60 * 1000);\n                const sharing = new _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n                    keyId: data.keyId,\n                    sharedBy: session.user.id,\n                    sharedWith: recipientUserId,\n                    sharedDate: new Date(),\n                    expiresAt,\n                    duration: `${durationHours} hours`,\n                    message: data.message,\n                    status: 'active'\n                });\n                await sharing.save();\n                // Log the transaction\n                const transaction = new _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                    type: 'shared',\n                    keyId: data.keyId,\n                    facultyId: session.user.id,\n                    timestamp: new Date(),\n                    details: `Key shared with ${data.recipientName} for ${durationHours} hours`,\n                    status: 'completed',\n                    sharedWith: recipientUserId,\n                    sharedDuration: `${durationHours} hours`\n                });\n                await transaction.save();\n                // Send notification email to recipient\n                const recipient = await _models_User__WEBPACK_IMPORTED_MODULE_7__[\"default\"].findById(recipientUserId);\n                if (recipient) {\n                    await _lib_emailService__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sendKeyAssignmentNotification(recipient.email, {\n                        facultyName: recipient.name,\n                        keyName: data.keyName,\n                        labName: data.labName,\n                        accessType: 'shared',\n                        assignedDate: new Date().toLocaleDateString()\n                    });\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    message: 'Key shared successfully',\n                    sharingId: sharing._id\n                });\n            case 'revoke-share':\n                // Revoke a key sharing\n                const shareToRevoke = await _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findOne({\n                    _id: data.sharingId,\n                    sharedBy: session.user.id,\n                    status: 'active'\n                });\n                if (!shareToRevoke) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Sharing record not found'\n                    }, {\n                        status: 404\n                    });\n                }\n                shareToRevoke.status = 'revoked';\n                shareToRevoke.revokedAt = new Date();\n                await shareToRevoke.save();\n                // Log the revocation\n                const revokeTransaction = new _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                    type: 'share_revoked',\n                    keyId: shareToRevoke.keyId,\n                    facultyId: session.user.id,\n                    timestamp: new Date(),\n                    details: 'Key sharing access revoked',\n                    status: 'completed'\n                });\n                await revokeTransaction.save();\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    message: 'Key sharing revoked successfully'\n                });\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Invalid action'\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error('Error processing sharing request:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const sharingId = searchParams.get('id');\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__.connectDB)();\n        // Find and delete the sharing record\n        const sharing = await _models_KeySharing__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findOne({\n            _id: sharingId,\n            $or: [\n                {\n                    sharedBy: session.user.id\n                },\n                {\n                    sharedWith: session.user.id\n                }\n            ]\n        });\n        if (!sharing) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Sharing record not found'\n            }, {\n                status: 404\n            });\n        }\n        sharing.status = 'cancelled';\n        sharing.cancelledAt = new Date();\n        await sharing.save();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Sharing cancelled successfully'\n        });\n    } catch (error) {\n        console.error('Error cancelling sharing:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/keys/share/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/emailService.js":
/*!*****************************!*\
  !*** ./lib/emailService.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n// Email notification service using nodemailer\n\n// Email templates for different notification types\nconst EMAIL_TEMPLATES = {\n    KEY_OVERDUE: {\n        subject: 'Key Return Reminder - VNR Key Management',\n        template: (data)=>`\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <div style=\"background: #88041c; color: white; padding: 20px; text-align: center;\">\n          <h1>VNR Key Management System</h1>\n        </div>\n        <div style=\"padding: 20px; background: #f9f9f9;\">\n          <h2 style=\"color: #88041c;\">Key Return Reminder</h2>\n          <p>Dear ${data.facultyName},</p>\n          <p>This is a reminder that the following key is overdue for return:</p>\n          <div style=\"background: white; padding: 15px; border-left: 4px solid #ef4444; margin: 20px 0;\">\n            <strong>Key:</strong> ${data.keyName}<br>\n            <strong>Lab:</strong> ${data.labName}<br>\n            <strong>Days Overdue:</strong> ${data.daysOverdue}<br>\n            <strong>Due Date:</strong> ${data.dueDate}\n          </div>\n          <p>Please return the key to the security desk immediately to avoid any penalties.</p>\n          <p>If you have any questions, please contact the security office.</p>\n          <p>Best regards,<br>VNR Key Management Team</p>\n        </div>\n      </div>\n    `\n    },\n    KEY_ASSIGNMENT: {\n        subject: 'New Key Assignment - VNR Key Management',\n        template: (data)=>`\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <div style=\"background: #88041c; color: white; padding: 20px; text-align: center;\">\n          <h1>VNR Key Management System</h1>\n        </div>\n        <div style=\"padding: 20px; background: #f9f9f9;\">\n          <h2 style=\"color: #88041c;\">New Key Assignment</h2>\n          <p>Dear ${data.facultyName},</p>\n          <p>You have been assigned access to the following key:</p>\n          <div style=\"background: white; padding: 15px; border-left: 4px solid #22c55e; margin: 20px 0;\">\n            <strong>Key:</strong> ${data.keyName}<br>\n            <strong>Lab:</strong> ${data.labName}<br>\n            <strong>Access Type:</strong> ${data.accessType}<br>\n            <strong>Assigned Date:</strong> ${data.assignedDate}\n          </div>\n          <p>You can now collect this key from the security desk during office hours.</p>\n          <p>Please remember to return the key on time to avoid any issues.</p>\n          <p>Best regards,<br>VNR Key Management Team</p>\n        </div>\n      </div>\n    `\n    },\n    SECURITY_ALERT: {\n        subject: 'Security Alert - VNR Key Management',\n        template: (data)=>`\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <div style=\"background: #88041c; color: white; padding: 20px; text-align: center;\">\n          <h1>VNR Key Management System</h1>\n        </div>\n        <div style=\"padding: 20px; background: #f9f9f9;\">\n          <h2 style=\"color: #ef4444;\">Security Alert</h2>\n          <p>Dear Security Team,</p>\n          <p>The following security alert requires immediate attention:</p>\n          <div style=\"background: white; padding: 15px; border-left: 4px solid #ef4444; margin: 20px 0;\">\n            <strong>Alert Type:</strong> ${data.alertType}<br>\n            <strong>Key:</strong> ${data.keyName}<br>\n            <strong>Faculty:</strong> ${data.facultyName}<br>\n            <strong>Details:</strong> ${data.details}<br>\n            <strong>Time:</strong> ${data.timestamp}\n          </div>\n          <p>Please take appropriate action immediately.</p>\n          <p>Best regards,<br>VNR Key Management System</p>\n        </div>\n      </div>\n    `\n    },\n    WEEKLY_REPORT: {\n        subject: 'Weekly Key Usage Report - VNR Key Management',\n        template: (data)=>`\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <div style=\"background: #88041c; color: white; padding: 20px; text-align: center;\">\n          <h1>VNR Key Management System</h1>\n        </div>\n        <div style=\"padding: 20px; background: #f9f9f9;\">\n          <h2 style=\"color: #88041c;\">Weekly Key Usage Report</h2>\n          <p>Dear ${data.recipientName},</p>\n          <p>Here's your weekly key usage summary for ${data.weekPeriod}:</p>\n          <div style=\"background: white; padding: 15px; margin: 20px 0;\">\n            <h3>Summary Statistics:</h3>\n            <ul>\n              <li>Total Transactions: ${data.totalTransactions}</li>\n              <li>Keys Collected: ${data.keysCollected}</li>\n              <li>Keys Returned: ${data.keysReturned}</li>\n              <li>Overdue Keys: ${data.overdueKeys}</li>\n              <li>Active Delegations: ${data.activeDelegations}</li>\n            </ul>\n          </div>\n          <p>For detailed reports, please log in to the key management system.</p>\n          <p>Best regards,<br>VNR Key Management Team</p>\n        </div>\n      </div>\n    `\n    }\n};\nclass EmailService {\n    constructor(){\n        this.transporter = null;\n        this.initializeTransporter();\n    }\n    async initializeTransporter() {\n        try {\n            // Check if SMTP credentials are configured\n            if (!process.env.SMTP_USER || !process.env.SMTP_PASS) {\n                console.warn('SMTP credentials not configured. Email service will be disabled.');\n                this.transporter = null;\n                return;\n            }\n            // Configure nodemailer transporter\n            this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransporter({\n                host: process.env.SMTP_HOST || 'smtp.gmail.com',\n                port: process.env.SMTP_PORT || 587,\n                secure: false,\n                auth: {\n                    user: process.env.SMTP_USER,\n                    pass: process.env.SMTP_PASS\n                }\n            });\n            // Verify connection\n            await this.transporter.verify();\n            console.log('Email service initialized successfully');\n        } catch (error) {\n            console.error('Failed to initialize email service:', error);\n            this.transporter = null;\n        }\n    }\n    async sendEmail(to, templateType, data) {\n        if (!this.transporter) {\n            console.warn('Email transporter not initialized. Email not sent to:', to);\n            // Return true to prevent blocking the application flow\n            return true;\n        }\n        try {\n            const template = EMAIL_TEMPLATES[templateType];\n            if (!template) {\n                console.error('Email template not found:', templateType);\n                return false;\n            }\n            const mailOptions = {\n                from: `\"VNR Key Management\" <${process.env.SMTP_USER}>`,\n                to: Array.isArray(to) ? to.join(', ') : to,\n                subject: template.subject,\n                html: template.template(data)\n            };\n            const result = await this.transporter.sendMail(mailOptions);\n            console.log('Email sent successfully:', result.messageId);\n            return true;\n        } catch (error) {\n            console.error('Failed to send email:', error);\n            return false;\n        }\n    }\n    // Specific email methods for different scenarios\n    async sendOverdueReminder(facultyEmail, keyData) {\n        return this.sendEmail(facultyEmail, 'KEY_OVERDUE', {\n            facultyName: keyData.facultyName,\n            keyName: keyData.keyName,\n            labName: keyData.labName,\n            daysOverdue: keyData.daysOverdue,\n            dueDate: new Date(keyData.dueDate).toLocaleDateString()\n        });\n    }\n    async sendKeyAssignmentNotification(facultyEmail, keyData) {\n        return this.sendEmail(facultyEmail, 'KEY_ASSIGNMENT', {\n            facultyName: keyData.facultyName,\n            keyName: keyData.keyName,\n            labName: keyData.labName,\n            accessType: keyData.accessType,\n            assignedDate: new Date(keyData.assignedDate).toLocaleDateString()\n        });\n    }\n    async sendSecurityAlert(securityEmails, alertData) {\n        return this.sendEmail(securityEmails, 'SECURITY_ALERT', {\n            alertType: alertData.alertType,\n            keyName: alertData.keyName,\n            facultyName: alertData.facultyName,\n            details: alertData.details,\n            timestamp: new Date(alertData.timestamp).toLocaleString()\n        });\n    }\n    async sendWeeklyReport(recipientEmail, reportData) {\n        return this.sendEmail(recipientEmail, 'WEEKLY_REPORT', {\n            recipientName: reportData.recipientName,\n            weekPeriod: reportData.weekPeriod,\n            totalTransactions: reportData.totalTransactions,\n            keysCollected: reportData.keysCollected,\n            keysReturned: reportData.keysReturned,\n            overdueKeys: reportData.overdueKeys,\n            activeDelegations: reportData.activeDelegations\n        });\n    }\n    // Bulk email methods\n    async sendBulkOverdueReminders(overdueKeys) {\n        const results = [];\n        for (const keyData of overdueKeys){\n            const result = await this.sendOverdueReminder(keyData.facultyEmail, keyData);\n            results.push({\n                keyId: keyData.keyId,\n                success: result\n            });\n        }\n        return results;\n    }\n    async sendDepartmentReport(hodEmail, departmentData) {\n        return this.sendWeeklyReport(hodEmail, {\n            recipientName: departmentData.hodName,\n            weekPeriod: departmentData.weekPeriod,\n            totalTransactions: departmentData.stats.totalTransactions,\n            keysCollected: departmentData.stats.keysCollected,\n            keysReturned: departmentData.stats.keysReturned,\n            overdueKeys: departmentData.stats.overdueKeys,\n            activeDelegations: departmentData.stats.activeDelegations\n        });\n    }\n}\n// Export singleton instance\nconst emailService = new EmailService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (emailService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/emailService.js\n");

/***/ }),

/***/ "(rsc)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectDB: () => (/* binding */ connectDB),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   disconnectDB: () => (/* binding */ disconnectDB)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/vnr-key-management';\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */ let cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function connectDB() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            maxPoolSize: 10,\n            serverSelectionTimeoutMS: 5000,\n            socketTimeoutMS: 45000,\n            family: 4\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log('‚úÖ Connected to MongoDB');\n            return mongoose;\n        }).catch((error)=>{\n            console.error('‚ùå MongoDB connection error:', error);\n            throw error;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\nasync function disconnectDB() {\n    if (cached.conn) {\n        await cached.conn.disconnect();\n        cached.conn = null;\n        cached.promise = null;\n        console.log('üîå Disconnected from MongoDB');\n    }\n}\n// Connection event handlers\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('connected', ()=>{\n    console.log('üîó Mongoose connected to MongoDB');\n});\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('error', (err)=>{\n    console.error('‚ùå Mongoose connection error:', err);\n});\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('disconnected', ()=>{\n    console.log('üîå Mongoose disconnected from MongoDB');\n});\n// Graceful shutdown\nprocess.on('SIGINT', async ()=>{\n    await disconnectDB();\n    process.exit(0);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9uZ29kYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNGLFdBQVcsSUFBSTtBQUUvQyxJQUFJLENBQUNBLGFBQWE7SUFDaEIsTUFBTSxJQUFJRyxNQUFNO0FBQ2xCO0FBRUE7Ozs7Q0FJQyxHQUNELElBQUlDLFNBQVNDLE9BQU9OLFFBQVE7QUFFNUIsSUFBSSxDQUFDSyxRQUFRO0lBQ1hBLFNBQVNDLE9BQU9OLFFBQVEsR0FBRztRQUFFTyxNQUFNO1FBQU1DLFNBQVM7SUFBSztBQUN6RDtBQUVPLGVBQWVDO0lBQ3BCLElBQUlKLE9BQU9FLElBQUksRUFBRTtRQUNmLE9BQU9GLE9BQU9FLElBQUk7SUFDcEI7SUFFQSxJQUFJLENBQUNGLE9BQU9HLE9BQU8sRUFBRTtRQUNuQixNQUFNRSxPQUFPO1lBQ1hDLGdCQUFnQjtZQUNoQkMsYUFBYTtZQUNiQywwQkFBMEI7WUFDMUJDLGlCQUFpQjtZQUNqQkMsUUFBUTtRQUNWO1FBRUFWLE9BQU9HLE9BQU8sR0FBR1IsdURBQWdCLENBQUNDLGFBQWFTLE1BQU1PLElBQUksQ0FBQyxDQUFDakI7WUFDekRrQixRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPbkI7UUFDVCxHQUFHb0IsS0FBSyxDQUFDLENBQUNDO1lBQ1JILFFBQVFHLEtBQUssQ0FBQywrQkFBK0JBO1lBQzdDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBLElBQUk7UUFDRmhCLE9BQU9FLElBQUksR0FBRyxNQUFNRixPQUFPRyxPQUFPO0lBQ3BDLEVBQUUsT0FBT2MsR0FBRztRQUNWakIsT0FBT0csT0FBTyxHQUFHO1FBQ2pCLE1BQU1jO0lBQ1I7SUFFQSxPQUFPakIsT0FBT0UsSUFBSTtBQUNwQjtBQUVPLGVBQWVnQjtJQUNwQixJQUFJbEIsT0FBT0UsSUFBSSxFQUFFO1FBQ2YsTUFBTUYsT0FBT0UsSUFBSSxDQUFDaUIsVUFBVTtRQUM1Qm5CLE9BQU9FLElBQUksR0FBRztRQUNkRixPQUFPRyxPQUFPLEdBQUc7UUFDakJVLFFBQVFDLEdBQUcsQ0FBQztJQUNkO0FBQ0Y7QUFFQSw0QkFBNEI7QUFDNUJuQiwwREFBbUIsQ0FBQzBCLEVBQUUsQ0FBQyxhQUFhO0lBQ2xDUixRQUFRQyxHQUFHLENBQUM7QUFDZDtBQUVBbkIsMERBQW1CLENBQUMwQixFQUFFLENBQUMsU0FBUyxDQUFDQztJQUMvQlQsUUFBUUcsS0FBSyxDQUFDLGdDQUFnQ007QUFDaEQ7QUFFQTNCLDBEQUFtQixDQUFDMEIsRUFBRSxDQUFDLGdCQUFnQjtJQUNyQ1IsUUFBUUMsR0FBRyxDQUFDO0FBQ2Q7QUFFQSxvQkFBb0I7QUFDcEJqQixRQUFRd0IsRUFBRSxDQUFDLFVBQVU7SUFDbkIsTUFBTUg7SUFDTnJCLFFBQVEwQixJQUFJLENBQUM7QUFDZjtBQUVBLGlFQUFlbkIsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2thcnRoaWtndXJyYW0vcHJvamVjdHMvaW5ub3ZhdGlvbi9rZXktbWFuYWdlbWVudC9saWIvbW9uZ29kYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zdCBNT05HT0RCX1VSSSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJIHx8ICdtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L3Zuci1rZXktbWFuYWdlbWVudCc7XG5cbmlmICghTU9OR09EQl9VUkkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZGVmaW5lIHRoZSBNT05HT0RCX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudi5sb2NhbCcpO1xufVxuXG4vKipcbiAqIEdsb2JhbCBpcyB1c2VkIGhlcmUgdG8gbWFpbnRhaW4gYSBjYWNoZWQgY29ubmVjdGlvbiBhY3Jvc3MgaG90IHJlbG9hZHNcbiAqIGluIGRldmVsb3BtZW50LiBUaGlzIHByZXZlbnRzIGNvbm5lY3Rpb25zIGdyb3dpbmcgZXhwb25lbnRpYWxseVxuICogZHVyaW5nIEFQSSBSb3V0ZSB1c2FnZS5cbiAqL1xubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nb29zZTtcblxuaWYgKCFjYWNoZWQpIHtcbiAgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlID0geyBjb25uOiBudWxsLCBwcm9taXNlOiBudWxsIH07XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25uZWN0REIoKSB7XG4gIGlmIChjYWNoZWQuY29ubikge1xuICAgIHJldHVybiBjYWNoZWQuY29ubjtcbiAgfVxuXG4gIGlmICghY2FjaGVkLnByb21pc2UpIHtcbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgYnVmZmVyQ29tbWFuZHM6IGZhbHNlLFxuICAgICAgbWF4UG9vbFNpemU6IDEwLFxuICAgICAgc2VydmVyU2VsZWN0aW9uVGltZW91dE1TOiA1MDAwLFxuICAgICAgc29ja2V0VGltZW91dE1TOiA0NTAwMCxcbiAgICAgIGZhbWlseTogNFxuICAgIH07XG5cbiAgICBjYWNoZWQucHJvbWlzZSA9IG1vbmdvb3NlLmNvbm5lY3QoTU9OR09EQl9VUkksIG9wdHMpLnRoZW4oKG1vbmdvb3NlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn4pyFIENvbm5lY3RlZCB0byBNb25nb0RCJyk7XG4gICAgICByZXR1cm4gbW9uZ29vc2U7XG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgTW9uZ29EQiBjb25uZWN0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjYWNoZWQuY29ubiA9IGF3YWl0IGNhY2hlZC5wcm9taXNlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY2FjaGVkLnByb21pc2UgPSBudWxsO1xuICAgIHRocm93IGU7XG4gIH1cblxuICByZXR1cm4gY2FjaGVkLmNvbm47XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkaXNjb25uZWN0REIoKSB7XG4gIGlmIChjYWNoZWQuY29ubikge1xuICAgIGF3YWl0IGNhY2hlZC5jb25uLmRpc2Nvbm5lY3QoKTtcbiAgICBjYWNoZWQuY29ubiA9IG51bGw7XG4gICAgY2FjaGVkLnByb21pc2UgPSBudWxsO1xuICAgIGNvbnNvbGUubG9nKCfwn5SMIERpc2Nvbm5lY3RlZCBmcm9tIE1vbmdvREInKTtcbiAgfVxufVxuXG4vLyBDb25uZWN0aW9uIGV2ZW50IGhhbmRsZXJzXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdjb25uZWN0ZWQnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCfwn5SXIE1vbmdvb3NlIGNvbm5lY3RlZCB0byBNb25nb0RCJyk7XG59KTtcblxubW9uZ29vc2UuY29ubmVjdGlvbi5vbignZXJyb3InLCAoZXJyKSA9PiB7XG4gIGNvbnNvbGUuZXJyb3IoJ+KdjCBNb25nb29zZSBjb25uZWN0aW9uIGVycm9yOicsIGVycik7XG59KTtcblxubW9uZ29vc2UuY29ubmVjdGlvbi5vbignZGlzY29ubmVjdGVkJywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygn8J+UjCBNb25nb29zZSBkaXNjb25uZWN0ZWQgZnJvbSBNb25nb0RCJyk7XG59KTtcblxuLy8gR3JhY2VmdWwgc2h1dGRvd25cbnByb2Nlc3Mub24oJ1NJR0lOVCcsIGFzeW5jICgpID0+IHtcbiAgYXdhaXQgZGlzY29ubmVjdERCKCk7XG4gIHByb2Nlc3MuZXhpdCgwKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0REI7XG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiY29ubmVjdERCIiwib3B0cyIsImJ1ZmZlckNvbW1hbmRzIiwibWF4UG9vbFNpemUiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJzb2NrZXRUaW1lb3V0TVMiLCJmYW1pbHkiLCJjb25uZWN0IiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImVycm9yIiwiZSIsImRpc2Nvbm5lY3REQiIsImRpc2Nvbm5lY3QiLCJjb25uZWN0aW9uIiwib24iLCJlcnIiLCJleGl0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/mongodb.js\n");

/***/ }),

/***/ "(rsc)/./lib/userRoles.js":
/*!**************************!*\
  !*** ./lib/userRoles.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VALID_ROLES: () => (/* binding */ VALID_ROLES),\n/* harmony export */   deleteUserRole: () => (/* binding */ deleteUserRole),\n/* harmony export */   getAllUserRoles: () => (/* binding */ getAllUserRoles),\n/* harmony export */   getUserRole: () => (/* binding */ getUserRole),\n/* harmony export */   isValidRole: () => (/* binding */ isValidRole),\n/* harmony export */   setUserRole: () => (/* binding */ setUserRole),\n/* harmony export */   userRoles: () => (/* binding */ userRoles)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// Shared user roles storage\n// In production, this should be replaced with a database\n\n\n// File-based storage for persistence across server restarts\nconst ROLES_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '.user-roles.json');\n// Initialize userRoles Map from file if it exists\nconst userRoles = new Map();\n// Load existing roles from file on startup\nfunction loadRolesFromFile() {\n    try {\n        if (fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(ROLES_FILE)) {\n            const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(ROLES_FILE, 'utf8');\n            const rolesData = JSON.parse(data);\n            Object.entries(rolesData).forEach(([email, userData])=>{\n                userRoles.set(email, userData);\n            });\n            console.log(`üìÅ Loaded ${userRoles.size} user roles from file`);\n        }\n    } catch (error) {\n        console.error('Error loading roles from file:', error);\n    }\n}\n// Save roles to file\nfunction saveRolesToFile() {\n    try {\n        const rolesData = Object.fromEntries(userRoles);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(ROLES_FILE, JSON.stringify(rolesData, null, 2));\n    } catch (error) {\n        console.error('Error saving roles to file:', error);\n    }\n}\n// Load roles on module initialization\nloadRolesFromFile();\n// Helper functions for role management\nfunction setUserRole(email, role, updatedBy = 'system') {\n    userRoles.set(email, {\n        role,\n        updatedAt: new Date().toISOString(),\n        updatedBy\n    });\n    // Save to file for persistence\n    saveRolesToFile();\n    console.log(`‚úÖ Role set for ${email}: ${role} (saved to file)`);\n}\nfunction getUserRole(email) {\n    const userData = userRoles.get(email);\n    const role = userData ? userData.role : null;\n    // Debug logging to understand what's happening\n    if (role) {\n        console.log(`üîç getUserRole: Found stored role for ${email}: ${role}`);\n    } else {\n        console.log(`‚ùå getUserRole: No stored role found for ${email}. Available roles:`, Array.from(userRoles.keys()));\n    }\n    return role;\n}\nfunction getAllUserRoles() {\n    return Array.from(userRoles.entries()).map(([email, data])=>({\n            email,\n            ...data\n        }));\n}\nfunction deleteUserRole(email) {\n    const deleted = userRoles.delete(email);\n    if (deleted) {\n        // Save to file after deletion\n        saveRolesToFile();\n        console.log(`üóëÔ∏è Role deleted for ${email} (saved to file)`);\n    }\n    return deleted;\n}\n// Valid roles\nconst VALID_ROLES = [\n    'faculty',\n    'hod',\n    'security',\n    'security_head',\n    'admin'\n];\nfunction isValidRole(role) {\n    return VALID_ROLES.includes(role);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdXNlclJvbGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNEJBQTRCO0FBQzVCLHlEQUF5RDtBQUVyQztBQUNJO0FBRXhCLDREQUE0RDtBQUM1RCxNQUFNRSxhQUFhRCxnREFBUyxDQUFDRyxRQUFRQyxHQUFHLElBQUk7QUFFNUMsa0RBQWtEO0FBQzNDLE1BQU1DLFlBQVksSUFBSUMsTUFBTTtBQUVuQywyQ0FBMkM7QUFDM0MsU0FBU0M7SUFDUCxJQUFJO1FBQ0YsSUFBSVIsb0RBQWEsQ0FBQ0UsYUFBYTtZQUM3QixNQUFNUSxPQUFPVixzREFBZSxDQUFDRSxZQUFZO1lBQ3pDLE1BQU1VLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ0o7WUFDN0JLLE9BQU9DLE9BQU8sQ0FBQ0osV0FBV0ssT0FBTyxDQUFDLENBQUMsQ0FBQ0MsT0FBT0MsU0FBUztnQkFDbERiLFVBQVVjLEdBQUcsQ0FBQ0YsT0FBT0M7WUFDdkI7WUFDQUUsUUFBUUMsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFaEIsVUFBVWlCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQztRQUNoRTtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsa0NBQWtDQTtJQUNsRDtBQUNGO0FBRUEscUJBQXFCO0FBQ3JCLFNBQVNDO0lBQ1AsSUFBSTtRQUNGLE1BQU1iLFlBQVlHLE9BQU9XLFdBQVcsQ0FBQ3BCO1FBQ3JDTix1REFBZ0IsQ0FBQ0UsWUFBWVcsS0FBS2UsU0FBUyxDQUFDaEIsV0FBVyxNQUFNO0lBQy9ELEVBQUUsT0FBT1ksT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsK0JBQStCQTtJQUMvQztBQUNGO0FBRUEsc0NBQXNDO0FBQ3RDaEI7QUFFQSx1Q0FBdUM7QUFDaEMsU0FBU3FCLFlBQVlYLEtBQUssRUFBRVksSUFBSSxFQUFFQyxZQUFZLFFBQVE7SUFDM0R6QixVQUFVYyxHQUFHLENBQUNGLE9BQU87UUFDbkJZO1FBQ0FFLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztRQUNqQ0g7SUFDRjtJQUVBLCtCQUErQjtJQUMvQk47SUFFQUosUUFBUUMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFSixNQUFNLEVBQUUsRUFBRVksS0FBSyxnQkFBZ0IsQ0FBQztBQUNoRTtBQUVPLFNBQVNLLFlBQVlqQixLQUFLO0lBQy9CLE1BQU1DLFdBQVdiLFVBQVU4QixHQUFHLENBQUNsQjtJQUMvQixNQUFNWSxPQUFPWCxXQUFXQSxTQUFTVyxJQUFJLEdBQUc7SUFFeEMsK0NBQStDO0lBQy9DLElBQUlBLE1BQU07UUFDUlQsUUFBUUMsR0FBRyxDQUFDLENBQUMsc0NBQXNDLEVBQUVKLE1BQU0sRUFBRSxFQUFFWSxNQUFNO0lBQ3ZFLE9BQU87UUFDTFQsUUFBUUMsR0FBRyxDQUFDLENBQUMsd0NBQXdDLEVBQUVKLE1BQU0sa0JBQWtCLENBQUMsRUFDOUVtQixNQUFNQyxJQUFJLENBQUNoQyxVQUFVaUMsSUFBSTtJQUM3QjtJQUVBLE9BQU9UO0FBQ1Q7QUFFTyxTQUFTVTtJQUNkLE9BQU9ILE1BQU1DLElBQUksQ0FBQ2hDLFVBQVVVLE9BQU8sSUFBSXlCLEdBQUcsQ0FBQyxDQUFDLENBQUN2QixPQUFPUixLQUFLLEdBQU07WUFDN0RRO1lBQ0EsR0FBR1IsSUFBSTtRQUNUO0FBQ0Y7QUFFTyxTQUFTZ0MsZUFBZXhCLEtBQUs7SUFDbEMsTUFBTXlCLFVBQVVyQyxVQUFVc0MsTUFBTSxDQUFDMUI7SUFDakMsSUFBSXlCLFNBQVM7UUFDWCw4QkFBOEI7UUFDOUJsQjtRQUNBSixRQUFRQyxHQUFHLENBQUMsQ0FBQyxxQkFBcUIsRUFBRUosTUFBTSxnQkFBZ0IsQ0FBQztJQUM3RDtJQUNBLE9BQU95QjtBQUNUO0FBRUEsY0FBYztBQUNQLE1BQU1FLGNBQWM7SUFBQztJQUFXO0lBQU87SUFBWTtJQUFpQjtDQUFRLENBQUM7QUFFN0UsU0FBU0MsWUFBWWhCLElBQUk7SUFDOUIsT0FBT2UsWUFBWUUsUUFBUSxDQUFDakI7QUFDOUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXJ0aGlrZ3VycmFtL3Byb2plY3RzL2lubm92YXRpb24va2V5LW1hbmFnZW1lbnQvbGliL3VzZXJSb2xlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaGFyZWQgdXNlciByb2xlcyBzdG9yYWdlXG4vLyBJbiBwcm9kdWN0aW9uLCB0aGlzIHNob3VsZCBiZSByZXBsYWNlZCB3aXRoIGEgZGF0YWJhc2VcblxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG4vLyBGaWxlLWJhc2VkIHN0b3JhZ2UgZm9yIHBlcnNpc3RlbmNlIGFjcm9zcyBzZXJ2ZXIgcmVzdGFydHNcbmNvbnN0IFJPTEVTX0ZJTEUgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJy51c2VyLXJvbGVzLmpzb24nKTtcblxuLy8gSW5pdGlhbGl6ZSB1c2VyUm9sZXMgTWFwIGZyb20gZmlsZSBpZiBpdCBleGlzdHNcbmV4cG9ydCBjb25zdCB1c2VyUm9sZXMgPSBuZXcgTWFwKCk7XG5cbi8vIExvYWQgZXhpc3Rpbmcgcm9sZXMgZnJvbSBmaWxlIG9uIHN0YXJ0dXBcbmZ1bmN0aW9uIGxvYWRSb2xlc0Zyb21GaWxlKCkge1xuICB0cnkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKFJPTEVTX0ZJTEUpKSB7XG4gICAgICBjb25zdCBkYXRhID0gZnMucmVhZEZpbGVTeW5jKFJPTEVTX0ZJTEUsICd1dGY4Jyk7XG4gICAgICBjb25zdCByb2xlc0RhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgT2JqZWN0LmVudHJpZXMocm9sZXNEYXRhKS5mb3JFYWNoKChbZW1haWwsIHVzZXJEYXRhXSkgPT4ge1xuICAgICAgICB1c2VyUm9sZXMuc2V0KGVtYWlsLCB1c2VyRGF0YSk7XG4gICAgICB9KTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn5OBIExvYWRlZCAke3VzZXJSb2xlcy5zaXplfSB1c2VyIHJvbGVzIGZyb20gZmlsZWApO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIHJvbGVzIGZyb20gZmlsZTonLCBlcnJvcik7XG4gIH1cbn1cblxuLy8gU2F2ZSByb2xlcyB0byBmaWxlXG5mdW5jdGlvbiBzYXZlUm9sZXNUb0ZpbGUoKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgcm9sZXNEYXRhID0gT2JqZWN0LmZyb21FbnRyaWVzKHVzZXJSb2xlcyk7XG4gICAgZnMud3JpdGVGaWxlU3luYyhST0xFU19GSUxFLCBKU09OLnN0cmluZ2lmeShyb2xlc0RhdGEsIG51bGwsIDIpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzYXZpbmcgcm9sZXMgdG8gZmlsZTonLCBlcnJvcik7XG4gIH1cbn1cblxuLy8gTG9hZCByb2xlcyBvbiBtb2R1bGUgaW5pdGlhbGl6YXRpb25cbmxvYWRSb2xlc0Zyb21GaWxlKCk7XG5cbi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIHJvbGUgbWFuYWdlbWVudFxuZXhwb3J0IGZ1bmN0aW9uIHNldFVzZXJSb2xlKGVtYWlsLCByb2xlLCB1cGRhdGVkQnkgPSAnc3lzdGVtJykge1xuICB1c2VyUm9sZXMuc2V0KGVtYWlsLCB7XG4gICAgcm9sZSxcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICB1cGRhdGVkQnlcbiAgfSk7XG5cbiAgLy8gU2F2ZSB0byBmaWxlIGZvciBwZXJzaXN0ZW5jZVxuICBzYXZlUm9sZXNUb0ZpbGUoKTtcblxuICBjb25zb2xlLmxvZyhg4pyFIFJvbGUgc2V0IGZvciAke2VtYWlsfTogJHtyb2xlfSAoc2F2ZWQgdG8gZmlsZSlgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJSb2xlKGVtYWlsKSB7XG4gIGNvbnN0IHVzZXJEYXRhID0gdXNlclJvbGVzLmdldChlbWFpbCk7XG4gIGNvbnN0IHJvbGUgPSB1c2VyRGF0YSA/IHVzZXJEYXRhLnJvbGUgOiBudWxsO1xuXG4gIC8vIERlYnVnIGxvZ2dpbmcgdG8gdW5kZXJzdGFuZCB3aGF0J3MgaGFwcGVuaW5nXG4gIGlmIChyb2xlKSB7XG4gICAgY29uc29sZS5sb2coYPCflI0gZ2V0VXNlclJvbGU6IEZvdW5kIHN0b3JlZCByb2xlIGZvciAke2VtYWlsfTogJHtyb2xlfWApO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKGDinYwgZ2V0VXNlclJvbGU6IE5vIHN0b3JlZCByb2xlIGZvdW5kIGZvciAke2VtYWlsfS4gQXZhaWxhYmxlIHJvbGVzOmAsXG4gICAgICBBcnJheS5mcm9tKHVzZXJSb2xlcy5rZXlzKCkpKTtcbiAgfVxuXG4gIHJldHVybiByb2xlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsVXNlclJvbGVzKCkge1xuICByZXR1cm4gQXJyYXkuZnJvbSh1c2VyUm9sZXMuZW50cmllcygpKS5tYXAoKFtlbWFpbCwgZGF0YV0pID0+ICh7XG4gICAgZW1haWwsXG4gICAgLi4uZGF0YVxuICB9KSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVVc2VyUm9sZShlbWFpbCkge1xuICBjb25zdCBkZWxldGVkID0gdXNlclJvbGVzLmRlbGV0ZShlbWFpbCk7XG4gIGlmIChkZWxldGVkKSB7XG4gICAgLy8gU2F2ZSB0byBmaWxlIGFmdGVyIGRlbGV0aW9uXG4gICAgc2F2ZVJvbGVzVG9GaWxlKCk7XG4gICAgY29uc29sZS5sb2coYPCfl5HvuI8gUm9sZSBkZWxldGVkIGZvciAke2VtYWlsfSAoc2F2ZWQgdG8gZmlsZSlgKTtcbiAgfVxuICByZXR1cm4gZGVsZXRlZDtcbn1cblxuLy8gVmFsaWQgcm9sZXNcbmV4cG9ydCBjb25zdCBWQUxJRF9ST0xFUyA9IFsnZmFjdWx0eScsICdob2QnLCAnc2VjdXJpdHknLCAnc2VjdXJpdHlfaGVhZCcsICdhZG1pbiddO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFJvbGUocm9sZSkge1xuICByZXR1cm4gVkFMSURfUk9MRVMuaW5jbHVkZXMocm9sZSk7XG59XG4iXSwibmFtZXMiOlsiZnMiLCJwYXRoIiwiUk9MRVNfRklMRSIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwidXNlclJvbGVzIiwiTWFwIiwibG9hZFJvbGVzRnJvbUZpbGUiLCJleGlzdHNTeW5jIiwiZGF0YSIsInJlYWRGaWxlU3luYyIsInJvbGVzRGF0YSIsIkpTT04iLCJwYXJzZSIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwiZW1haWwiLCJ1c2VyRGF0YSIsInNldCIsImNvbnNvbGUiLCJsb2ciLCJzaXplIiwiZXJyb3IiLCJzYXZlUm9sZXNUb0ZpbGUiLCJmcm9tRW50cmllcyIsIndyaXRlRmlsZVN5bmMiLCJzdHJpbmdpZnkiLCJzZXRVc2VyUm9sZSIsInJvbGUiLCJ1cGRhdGVkQnkiLCJ1cGRhdGVkQXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJnZXRVc2VyUm9sZSIsImdldCIsIkFycmF5IiwiZnJvbSIsImtleXMiLCJnZXRBbGxVc2VyUm9sZXMiLCJtYXAiLCJkZWxldGVVc2VyUm9sZSIsImRlbGV0ZWQiLCJkZWxldGUiLCJWQUxJRF9ST0xFUyIsImlzVmFsaWRSb2xlIiwiaW5jbHVkZXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/userRoles.js\n");

/***/ }),

/***/ "(rsc)/./models/KeyAssignment.js":
/*!*********************************!*\
  !*** ./models/KeyAssignment.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeyAssignmentSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    keyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'Key',\n        required: true\n    },\n    facultyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    assignedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    assignedDate: {\n        type: Date,\n        default: Date.now\n    },\n    dueDate: {\n        type: Date,\n        required: true\n    },\n    returnedDate: {\n        type: Date\n    },\n    accessType: {\n        type: String,\n        enum: [\n            'permanent',\n            'temporary',\n            'shared'\n        ],\n        default: 'temporary'\n    },\n    status: {\n        type: String,\n        enum: [\n            'pending',\n            'active',\n            'returned',\n            'overdue',\n            'cancelled'\n        ],\n        default: 'pending'\n    },\n    requestReason: {\n        type: String,\n        trim: true\n    },\n    returnReason: {\n        type: String,\n        trim: true\n    },\n    // QR Code tracking\n    qrCodeGenerated: {\n        type: Boolean,\n        default: false\n    },\n    qrCodeGeneratedAt: {\n        type: Date\n    },\n    qrCodeUsedAt: {\n        type: Date\n    },\n    // Collection/Return tracking\n    collectedAt: {\n        type: Date\n    },\n    collectedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User' // Security personnel\n    },\n    returnedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User' // Security personnel\n    },\n    // Usage tracking\n    lastUsed: {\n        type: Date\n    },\n    usageCount: {\n        type: Number,\n        default: 0\n    },\n    actualDuration: {\n        type: Number // in hours\n    },\n    // Notifications\n    remindersSent: {\n        type: Number,\n        default: 0\n    },\n    lastReminderSent: {\n        type: Date\n    },\n    // Approval workflow\n    approvalRequired: {\n        type: Boolean,\n        default: false\n    },\n    approvedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    approvedAt: {\n        type: Date\n    },\n    rejectedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    rejectedAt: {\n        type: Date\n    },\n    rejectionReason: {\n        type: String\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeyAssignmentSchema.index({\n    facultyId: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    keyId: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    dueDate: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    status: 1,\n    assignedDate: -1\n});\n// Virtual for checking if overdue\nKeyAssignmentSchema.virtual('isOverdue').get(function() {\n    return this.status === 'active' && new Date() > this.dueDate;\n});\n// Virtual for days overdue\nKeyAssignmentSchema.virtual('daysOverdue').get(function() {\n    if (!this.isOverdue) return 0;\n    const diffTime = new Date() - this.dueDate;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n});\n// Virtual for assignment duration\nKeyAssignmentSchema.virtual('plannedDuration').get(function() {\n    const diffTime = this.dueDate - this.assignedDate;\n    return Math.ceil(diffTime / (1000 * 60 * 60)); // in hours\n});\n// Methods\nKeyAssignmentSchema.methods.markAsCollected = function(securityPersonnelId) {\n    this.status = 'active';\n    this.collectedAt = new Date();\n    this.collectedBy = securityPersonnelId;\n    this.qrCodeUsedAt = new Date();\n    return this.save();\n};\nKeyAssignmentSchema.methods.markAsReturned = function(securityPersonnelId, returnReason = '') {\n    this.status = 'returned';\n    this.returnedDate = new Date();\n    this.returnedBy = securityPersonnelId;\n    this.returnReason = returnReason;\n    // Calculate actual duration\n    if (this.collectedAt) {\n        const diffTime = this.returnedDate - this.collectedAt;\n        this.actualDuration = Math.ceil(diffTime / (1000 * 60 * 60));\n    }\n    return this.save();\n};\nKeyAssignmentSchema.methods.generateQRCode = function() {\n    this.qrCodeGenerated = true;\n    this.qrCodeGeneratedAt = new Date();\n    return this.save();\n};\nKeyAssignmentSchema.methods.sendReminder = async function() {\n    this.remindersSent += 1;\n    this.lastReminderSent = new Date();\n    await this.save();\n// Here you would integrate with your email service\n// emailService.sendOverdueReminder(...)\n};\n// Static methods\nKeyAssignmentSchema.statics.findOverdue = function() {\n    return this.find({\n        status: 'active',\n        dueDate: {\n            $lt: new Date()\n        }\n    }).populate('keyId facultyId');\n};\nKeyAssignmentSchema.statics.findByFaculty = function(facultyId, status = null) {\n    const query = {\n        facultyId\n    };\n    if (status) query.status = status;\n    return this.find(query).populate('keyId');\n};\nKeyAssignmentSchema.statics.getDepartmentStats = function(department) {\n    return this.aggregate([\n        {\n            $lookup: {\n                from: 'keys',\n                localField: 'keyId',\n                foreignField: '_id',\n                as: 'key'\n            }\n        },\n        {\n            $match: {\n                'key.department': department\n            }\n        },\n        {\n            $group: {\n                _id: '$status',\n                count: {\n                    $sum: 1\n                },\n                avgDuration: {\n                    $avg: '$actualDuration'\n                }\n            }\n        }\n    ]);\n};\n// Pre-save middleware\nKeyAssignmentSchema.pre('save', function(next) {\n    // Auto-update status to overdue if past due date\n    if (this.status === 'active' && new Date() > this.dueDate) {\n        this.status = 'overdue';\n    }\n    next();\n});\n// Post-save middleware\nKeyAssignmentSchema.post('save', async function(doc) {\n    // Update key's current status\n    const Key = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Key');\n    const key = await Key.findById(doc.keyId);\n    if (key) {\n        if (doc.status === 'active' || doc.status === 'overdue') {\n            key.currentStatus = 'assigned';\n        } else if (doc.status === 'returned' || doc.status === 'cancelled') {\n            key.currentStatus = 'available';\n        }\n        await key.save();\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).KeyAssignment || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyAssignment', KeyAssignmentSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/KeyAssignment.js\n");

/***/ }),

/***/ "(rsc)/./models/KeySharing.js":
/*!******************************!*\
  !*** ./models/KeySharing.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeySharingSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    keyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'Key',\n        required: true\n    },\n    sharedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    sharedWith: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    sharedDate: {\n        type: Date,\n        default: Date.now\n    },\n    expiresAt: {\n        type: Date,\n        required: true\n    },\n    duration: {\n        type: String,\n        required: true // e.g., \"4 hours\", \"2 days\"\n    },\n    message: {\n        type: String,\n        trim: true\n    },\n    status: {\n        type: String,\n        enum: [\n            'active',\n            'expired',\n            'revoked',\n            'cancelled'\n        ],\n        default: 'active'\n    },\n    // Usage tracking\n    accessCount: {\n        type: Number,\n        default: 0\n    },\n    lastAccessed: {\n        type: Date\n    },\n    // Revocation details\n    revokedAt: {\n        type: Date\n    },\n    revokedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    revocationReason: {\n        type: String\n    },\n    // Cancellation details\n    cancelledAt: {\n        type: Date\n    },\n    cancelledBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    cancellationReason: {\n        type: String\n    },\n    // Notification tracking\n    notificationsSent: {\n        type: Number,\n        default: 0\n    },\n    lastNotificationSent: {\n        type: Date\n    },\n    // Access permissions\n    permissions: {\n        canCollect: {\n            type: Boolean,\n            default: true\n        },\n        canReturn: {\n            type: Boolean,\n            default: true\n        },\n        canDelegate: {\n            type: Boolean,\n            default: false\n        }\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeySharingSchema.index({\n    sharedBy: 1,\n    status: 1\n});\nKeySharingSchema.index({\n    sharedWith: 1,\n    status: 1\n});\nKeySharingSchema.index({\n    keyId: 1,\n    status: 1\n});\nKeySharingSchema.index({\n    expiresAt: 1,\n    status: 1\n});\n// Virtual for checking if expired\nKeySharingSchema.virtual('isExpired').get(function() {\n    return this.status === 'active' && new Date() > this.expiresAt;\n});\n// Virtual for time remaining\nKeySharingSchema.virtual('timeRemaining').get(function() {\n    if (this.status !== 'active') return null;\n    const now = new Date();\n    const remaining = this.expiresAt - now;\n    if (remaining <= 0) return 'Expired';\n    const hours = Math.floor(remaining / (1000 * 60 * 60));\n    const minutes = Math.floor(remaining % (1000 * 60 * 60) / (1000 * 60));\n    if (hours > 0) {\n        return `${hours}h ${minutes}m`;\n    } else {\n        return `${minutes}m`;\n    }\n});\n// Virtual for sharing duration in hours\nKeySharingSchema.virtual('durationInHours').get(function() {\n    const diffTime = this.expiresAt - this.sharedDate;\n    return Math.ceil(diffTime / (1000 * 60 * 60));\n});\n// Methods\nKeySharingSchema.methods.recordAccess = function() {\n    this.accessCount += 1;\n    this.lastAccessed = new Date();\n    return this.save();\n};\nKeySharingSchema.methods.revoke = function(revokedBy, reason = '') {\n    this.status = 'revoked';\n    this.revokedAt = new Date();\n    this.revokedBy = revokedBy;\n    this.revocationReason = reason;\n    return this.save();\n};\nKeySharingSchema.methods.cancel = function(cancelledBy, reason = '') {\n    this.status = 'cancelled';\n    this.cancelledAt = new Date();\n    this.cancelledBy = cancelledBy;\n    this.cancellationReason = reason;\n    return this.save();\n};\nKeySharingSchema.methods.extend = function(additionalHours) {\n    if (this.status !== 'active') {\n        throw new Error('Cannot extend inactive sharing');\n    }\n    const newExpiryTime = new Date(this.expiresAt.getTime() + additionalHours * 60 * 60 * 1000);\n    this.expiresAt = newExpiryTime;\n    // Update duration string\n    const totalHours = this.durationInHours + additionalHours;\n    this.duration = `${totalHours} hours`;\n    return this.save();\n};\nKeySharingSchema.methods.sendNotification = async function(type = 'reminder') {\n    this.notificationsSent += 1;\n    this.lastNotificationSent = new Date();\n    await this.save();\n    // Here you would integrate with your notification service\n    console.log(`Notification sent for sharing ${this._id}: ${type}`);\n};\n// Static methods\nKeySharingSchema.statics.findActive = function() {\n    return this.find({\n        status: 'active',\n        expiresAt: {\n            $gt: new Date()\n        }\n    }).populate('keyId sharedBy sharedWith');\n};\nKeySharingSchema.statics.findExpired = function() {\n    return this.find({\n        status: 'active',\n        expiresAt: {\n            $lte: new Date()\n        }\n    }).populate('keyId sharedBy sharedWith');\n};\nKeySharingSchema.statics.findByUser = function(userId, type = 'all') {\n    let query = {};\n    switch(type){\n        case 'shared_by':\n            query.sharedBy = userId;\n            break;\n        case 'shared_with':\n            query.sharedWith = userId;\n            break;\n        default:\n            query.$or = [\n                {\n                    sharedBy: userId\n                },\n                {\n                    sharedWith: userId\n                }\n            ];\n    }\n    return this.find(query).populate('keyId', 'name labName labNumber').populate('sharedBy', 'name email').populate('sharedWith', 'name email').sort({\n        sharedDate: -1\n    });\n};\nKeySharingSchema.statics.getKeyShares = function(keyId) {\n    return this.find({\n        keyId,\n        status: 'active'\n    }).populate('sharedBy', 'name email').populate('sharedWith', 'name email').sort({\n        sharedDate: -1\n    });\n};\nKeySharingSchema.statics.getSharingStats = function(startDate, endDate) {\n    return this.aggregate([\n        {\n            $match: {\n                sharedDate: {\n                    $gte: startDate,\n                    $lte: endDate\n                }\n            }\n        },\n        {\n            $group: {\n                _id: {\n                    date: {\n                        $dateToString: {\n                            format: \"%Y-%m-%d\",\n                            date: \"$sharedDate\"\n                        }\n                    },\n                    status: \"$status\"\n                },\n                count: {\n                    $sum: 1\n                },\n                totalAccessCount: {\n                    $sum: \"$accessCount\"\n                }\n            }\n        },\n        {\n            $group: {\n                _id: \"$_id.date\",\n                statuses: {\n                    $push: {\n                        status: \"$_id.status\",\n                        count: \"$count\",\n                        totalAccess: \"$totalAccessCount\"\n                    }\n                },\n                totalShares: {\n                    $sum: \"$count\"\n                }\n            }\n        },\n        {\n            $sort: {\n                _id: 1\n            }\n        }\n    ]);\n};\n// Pre-save middleware\nKeySharingSchema.pre('save', function(next) {\n    // Auto-update status to expired if past expiry date\n    if (this.status === 'active' && new Date() > this.expiresAt) {\n        this.status = 'expired';\n    }\n    next();\n});\n// Post-save middleware\nKeySharingSchema.post('save', async function(doc) {\n    // Log sharing activity\n    if (doc.isNew) {\n        const KeyTransaction = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyTransaction');\n        await KeyTransaction.create({\n            type: 'shared',\n            keyId: doc.keyId,\n            facultyId: doc.sharedBy,\n            sharedWith: doc.sharedWith,\n            sharedDuration: doc.duration,\n            sharingMessage: doc.message,\n            details: `Key shared for ${doc.duration}`\n        });\n    }\n});\n// Cleanup expired shares (run periodically)\nKeySharingSchema.statics.cleanupExpired = async function() {\n    const expiredShares = await this.find({\n        status: 'active',\n        expiresAt: {\n            $lte: new Date()\n        }\n    });\n    for (const share of expiredShares){\n        share.status = 'expired';\n        await share.save();\n    }\n    return expiredShares.length;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).KeySharing || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeySharing', KeySharingSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/KeySharing.js\n");

/***/ }),

/***/ "(rsc)/./models/KeyTransaction.js":
/*!**********************************!*\
  !*** ./models/KeyTransaction.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeyTransactionSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    type: {\n        type: String,\n        enum: [\n            'requested',\n            'approved',\n            'rejected',\n            'collected',\n            'returned',\n            'shared',\n            'share_revoked',\n            'overdue_reminder'\n        ],\n        required: true\n    },\n    keyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'Key',\n        required: true\n    },\n    facultyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    securityPersonnelId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    assignmentId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'KeyAssignment'\n    },\n    timestamp: {\n        type: Date,\n        default: Date.now\n    },\n    details: {\n        type: String,\n        trim: true\n    },\n    status: {\n        type: String,\n        enum: [\n            'pending',\n            'completed',\n            'failed',\n            'cancelled'\n        ],\n        default: 'completed'\n    },\n    // QR Code related data\n    qrCodeData: {\n        type: String // Encrypted QR code data\n    },\n    qrCodeExpiry: {\n        type: Date\n    },\n    // Sharing related fields\n    sharedWith: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    sharedDuration: {\n        type: String // e.g., \"4 hours\", \"2 days\"\n    },\n    sharingMessage: {\n        type: String\n    },\n    // Location and device info\n    location: {\n        latitude: Number,\n        longitude: Number,\n        address: String\n    },\n    deviceInfo: {\n        userAgent: String,\n        ipAddress: String,\n        deviceType: String // mobile, tablet, desktop\n    },\n    // Additional metadata\n    metadata: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.Mixed,\n        default: {}\n    },\n    // Approval workflow\n    approvedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    approvalNotes: {\n        type: String\n    },\n    // Error handling\n    errorMessage: {\n        type: String\n    },\n    retryCount: {\n        type: Number,\n        default: 0\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeyTransactionSchema.index({\n    facultyId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    keyId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    type: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    securityPersonnelId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    timestamp: -1\n});\n// Virtual for formatted timestamp\nKeyTransactionSchema.virtual('formattedTimestamp').get(function() {\n    return {\n        date: this.timestamp.toLocaleDateString(),\n        time: this.timestamp.toLocaleTimeString(),\n        relative: getRelativeTime(this.timestamp)\n    };\n});\n// Methods\nKeyTransactionSchema.methods.markAsCompleted = function(details = '') {\n    this.status = 'completed';\n    if (details) this.details = details;\n    return this.save();\n};\nKeyTransactionSchema.methods.markAsFailed = function(errorMessage) {\n    this.status = 'failed';\n    this.errorMessage = errorMessage;\n    this.retryCount += 1;\n    return this.save();\n};\nKeyTransactionSchema.methods.addMetadata = function(key, value) {\n    if (!this.metadata) this.metadata = {};\n    this.metadata[key] = value;\n    return this.save();\n};\n// Static methods\nKeyTransactionSchema.statics.getRecentActivity = function(limit = 50) {\n    return this.find().populate('keyId', 'name labName labNumber').populate('facultyId', 'name email').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getFacultyHistory = function(facultyId, limit = 100) {\n    return this.find({\n        facultyId\n    }).populate('keyId', 'name labName labNumber').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getKeyHistory = function(keyId, limit = 100) {\n    return this.find({\n        keyId\n    }).populate('facultyId', 'name email').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getDepartmentActivity = function(department, startDate, endDate) {\n    return this.aggregate([\n        {\n            $lookup: {\n                from: 'keys',\n                localField: 'keyId',\n                foreignField: '_id',\n                as: 'key'\n            }\n        },\n        {\n            $match: {\n                'key.department': department,\n                timestamp: {\n                    $gte: startDate,\n                    $lte: endDate\n                }\n            }\n        },\n        {\n            $group: {\n                _id: '$type',\n                count: {\n                    $sum: 1\n                },\n                latestActivity: {\n                    $max: '$timestamp'\n                }\n            }\n        }\n    ]);\n};\nKeyTransactionSchema.statics.getUsageStats = function(startDate, endDate) {\n    return this.aggregate([\n        {\n            $match: {\n                timestamp: {\n                    $gte: startDate,\n                    $lte: endDate\n                }\n            }\n        },\n        {\n            $group: {\n                _id: {\n                    date: {\n                        $dateToString: {\n                            format: \"%Y-%m-%d\",\n                            date: \"$timestamp\"\n                        }\n                    },\n                    type: \"$type\"\n                },\n                count: {\n                    $sum: 1\n                }\n            }\n        },\n        {\n            $group: {\n                _id: \"$_id.date\",\n                activities: {\n                    $push: {\n                        type: \"$_id.type\",\n                        count: \"$count\"\n                    }\n                },\n                totalCount: {\n                    $sum: \"$count\"\n                }\n            }\n        },\n        {\n            $sort: {\n                _id: 1\n            }\n        }\n    ]);\n};\n// Pre-save middleware\nKeyTransactionSchema.pre('save', function(next) {\n    // Auto-generate details if not provided\n    if (!this.details) {\n        this.details = generateDefaultDetails(this.type);\n    }\n    next();\n});\n// Post-save middleware for notifications\nKeyTransactionSchema.post('save', async function(doc) {\n    // Send notifications for important events\n    if ([\n        'overdue_reminder',\n        'shared',\n        'collected'\n    ].includes(doc.type)) {\n        // Trigger notification system\n        console.log(`Transaction logged: ${doc.type} for key ${doc.keyId}`);\n    }\n});\n// Helper functions\nfunction getRelativeTime(date) {\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n}\nfunction generateDefaultDetails(type) {\n    const defaultDetails = {\n        requested: 'Key access requested',\n        approved: 'Key request approved',\n        rejected: 'Key request rejected',\n        collected: 'Key collected from security desk',\n        returned: 'Key returned to security desk',\n        shared: 'Key access shared with another faculty',\n        share_revoked: 'Key sharing access revoked',\n        overdue_reminder: 'Overdue reminder sent'\n    };\n    return defaultDetails[type] || 'Key transaction';\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).KeyTransaction || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyTransaction', KeyTransactionSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/KeyTransaction.js\n");

/***/ }),

/***/ "(rsc)/./models/User.js":
/*!************************!*\
  !*** ./models/User.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        lowercase: true,\n        trim: true,\n        match: [\n            /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n            'Please enter a valid email address'\n        ]\n    },\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    employeeId: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true\n    },\n    role: {\n        type: String,\n        required: true,\n        enum: [\n            'faculty',\n            'hod',\n            'security',\n            'security_head',\n            'admin'\n        ],\n        default: 'faculty'\n    },\n    department: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    image: {\n        type: String,\n        default: null\n    },\n    googleId: {\n        type: String,\n        default: null\n    },\n    password: {\n        type: String,\n        default: null\n    },\n    profileImage: {\n        type: String,\n        default: null\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    lastLogin: {\n        type: Date,\n        default: null\n    },\n    passwordResetRequired: {\n        type: Boolean,\n        default: false\n    },\n    createdBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        default: null\n    },\n    deletedAt: {\n        type: Date,\n        default: null\n    },\n    deletedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        default: null\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nuserSchema.index({\n    email: 1\n});\nuserSchema.index({\n    employeeId: 1\n});\nuserSchema.index({\n    role: 1\n});\nuserSchema.index({\n    department: 1\n});\nuserSchema.index({\n    googleId: 1\n});\nuserSchema.index({\n    isActive: 1\n});\nuserSchema.index({\n    createdAt: -1\n});\n// Pre-save middleware to update the updatedAt field\nuserSchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\n// Instance methods\nuserSchema.methods.toJSON = function() {\n    const user = this.toObject();\n    delete user.__v;\n    return user;\n};\nuserSchema.methods.updateLastLogin = function() {\n    this.lastLogin = new Date();\n    return this.save();\n};\n// Static methods\nuserSchema.statics.findByEmail = function(email) {\n    return this.findOne({\n        email: email.toLowerCase()\n    });\n};\nuserSchema.statics.findByEmployeeId = function(employeeId) {\n    return this.findOne({\n        employeeId\n    });\n};\nuserSchema.statics.findByRole = function(role) {\n    return this.find({\n        role,\n        isActive: true\n    });\n};\nuserSchema.statics.findByDepartment = function(department) {\n    return this.find({\n        department,\n        isActive: true\n    });\n};\nuserSchema.statics.findByGoogleId = function(googleId) {\n    return this.findOne({\n        googleId\n    });\n};\n// Virtual for full name (if needed)\nuserSchema.virtual('displayName').get(function() {\n    return this.name;\n});\nconst User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('User', userSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/User.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkeys%2Fshare%2Froute&page=%2Fapi%2Fkeys%2Fshare%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkeys%2Fshare%2Froute.js&appDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkeys%2Fshare%2Froute&page=%2Fapi%2Fkeys%2Fshare%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkeys%2Fshare%2Froute.js&appDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_karthikgurram_projects_innovation_key_management_app_api_keys_share_route_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/keys/share/route.js */ \"(rsc)/./app/api/keys/share/route.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/keys/share/route\",\n        pathname: \"/api/keys/share\",\n        filename: \"route\",\n        bundlePath: \"app/api/keys/share/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/karthikgurram/projects/innovation/key-management/app/api/keys/share/route.js\",\n    nextConfigOutput,\n    userland: _Users_karthikgurram_projects_innovation_key_management_app_api_keys_share_route_js__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/keys/share/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkeys%2Fshare%2Froute&page=%2Fapi%2Fkeys%2Fshare%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkeys%2Fshare%2Froute.js&appDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/oauth","vendor-chunks/lru-cache","vendor-chunks/object-hash","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fkeys%2Fshare%2Froute&page=%2Fapi%2Fkeys%2Fshare%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fkeys%2Fshare%2Froute.js&appDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkarthikgurram%2Fprojects%2Finnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();