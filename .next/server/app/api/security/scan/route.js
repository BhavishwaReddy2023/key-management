/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/security/scan/route";
exports.ids = ["app/api/security/scan/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/[...nextauth]/route.js":
/*!*********************************************!*\
  !*** ./app/api/auth/[...nextauth]/route.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ handler),\n/* harmony export */   POST: () => (/* binding */ handler),\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"(rsc)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var _lib_userRoles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/userRoles */ \"(rsc)/./lib/userRoles.js\");\n\n\n\n// Define role-based access control\nconst ROLE_MAPPINGS = {\n    // Admin emails\n    'admin@vnrvjiet.in': 'admin',\n    'principal@vnrvjiet.in': 'admin',\n    // HOD emails (you can add specific HOD emails here)\n    'hod.cse@vnrvjiet.in': 'hod',\n    'hod.ece@vnrvjiet.in': 'hod',\n    'hod.eee@vnrvjiet.in': 'hod',\n    'hod.mech@vnrvjiet.in': 'hod',\n    'hod.civil@vnrvjiet.in': 'hod',\n    // Security staff emails\n    'security@vnrvjiet.in': 'security',\n    'security.head@vnrvjiet.in': 'security_head'\n};\n// Function to determine user role based on email\nfunction getUserRole(email, req = null) {\n    console.log(`üîç getUserRole called for ${email}`);\n    // First, check if user has a selected role stored\n    const storedRole = (0,_lib_userRoles__WEBPACK_IMPORTED_MODULE_2__.getUserRole)(email);\n    if (storedRole) {\n        console.log(`‚úÖ Using stored role for ${email}: ${storedRole}`);\n        return storedRole;\n    }\n    console.log(`‚ö†Ô∏è No stored role found for ${email}, checking fallbacks...`);\n    // Check for pending role from cookie (during registration)\n    // This is a fallback for when the role hasn't been stored yet\n    if (req && req.cookies) {\n        const pendingRole = req.cookies.get('pendingUserRole')?.value;\n        if (pendingRole) {\n            console.log(`üéØ Using pending role for ${email}: ${pendingRole}`);\n            // Store the role for future use\n            (0,_lib_userRoles__WEBPACK_IMPORTED_MODULE_2__.setUserRole)(email, pendingRole, 'registration');\n            return pendingRole;\n        }\n    }\n    // Check direct role mappings (for admin/special accounts)\n    if (ROLE_MAPPINGS[email]) {\n        console.log(`üìã Using mapped role for ${email}: ${ROLE_MAPPINGS[email]}`);\n        return ROLE_MAPPINGS[email];\n    }\n    // Check email patterns for different roles (legacy fallback)\n    if (email.includes('hod.') && email.endsWith('@vnrvjiet.in')) {\n        console.log(`üè¢ Using HOD role for ${email}`);\n        return 'hod';\n    }\n    if (email.includes('security') && email.endsWith('@vnrvjiet.in')) {\n        console.log(`üîí Using security role for ${email}`);\n        return 'security';\n    }\n    // Default role for vnrvjiet.in domain\n    if (email.endsWith('@vnrvjiet.in')) {\n        console.log(`üë®‚Äçüè´ Using default faculty role for ${email}`);\n        return 'faculty';\n    }\n    // For other domains, deny access\n    console.log(`‚ùå Access denied for ${email} - invalid domain`);\n    return null // This will prevent sign-in\n    ;\n}\n// Function to get department from email\nfunction getDepartmentFromEmail(email) {\n    const emailParts = email.split('@')[0];\n    if (emailParts.includes('cse')) return 'Computer Science and Engineering';\n    if (emailParts.includes('ece')) return 'Electronics and Communication Engineering';\n    if (emailParts.includes('eee')) return 'Electrical and Electronics Engineering';\n    if (emailParts.includes('mech')) return 'Mechanical Engineering';\n    if (emailParts.includes('civil')) return 'Civil Engineering';\n    if (emailParts.includes('it')) return 'Information Technology';\n    // Default department\n    return 'General';\n}\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.GOOGLE_CLIENT_ID,\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET\n        })\n    ],\n    callbacks: {\n        async signIn ({ user, account, profile }) {\n            // Check if user is allowed to sign in based on email domain\n            const role = getUserRole(user.email);\n            if (!role) {\n                console.log(`Sign-in denied for email: ${user.email}`);\n                return false // Deny sign-in\n                ;\n            }\n            // Only handle Google OAuth for user creation\n            if (account?.provider === 'google') {\n                try {\n                    const { connectDB } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_mongodb_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\"));\n                    const User = (await __webpack_require__.e(/*! import() */ \"_rsc_models_User_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../models/User */ \"(rsc)/./models/User.js\"))).default;\n                    await connectDB();\n                    let dbUser = await User.findOne({\n                        email: user.email\n                    });\n                    if (!dbUser) {\n                        // Create new user in database\n                        console.log(`üë§ Creating new user in database: ${user.email}`);\n                        dbUser = new User({\n                            email: user.email,\n                            name: user.name || user.email.split('@')[0],\n                            employeeId: user.email.split('@')[0],\n                            role: role || 'faculty',\n                            department: getDepartmentFromEmail(user.email),\n                            googleId: profile?.sub || account?.providerAccountId,\n                            image: user.image,\n                            isActive: true,\n                            lastLogin: new Date()\n                        });\n                        await dbUser.save();\n                        console.log(`‚úÖ User created successfully: ${user.email}`);\n                    } else {\n                        // Update last login and image if needed\n                        dbUser.lastLogin = new Date();\n                        if (user.image && !dbUser.image) {\n                            dbUser.image = user.image;\n                        }\n                        await dbUser.save();\n                        console.log(`üîÑ Updated existing user: ${user.email}`);\n                    }\n                } catch (error) {\n                    console.error('Error in signIn callback:', error);\n                // Continue with sign-in even if DB operation fails\n                }\n            }\n            return true // Allow sign-in\n            ;\n        },\n        async jwt ({ token, user, trigger }) {\n            const email = user?.email || token.email;\n            if (user) {\n                // Initial sign-in: Add basic info to token\n                token.email = user.email;\n                token.department = getDepartmentFromEmail(user.email);\n                token.employeeId = user.email.split('@')[0]; // Use email prefix as employee ID\n            }\n            // Always check for the most current role (both initial and refresh)\n            if (email) {\n                const currentRole = getUserRole(email);\n                if (currentRole) {\n                    const roleChanged = token.role !== currentRole;\n                    token.role = currentRole;\n                    if (user) {\n                        console.log(`üîë JWT created for ${email} with role: ${token.role}`);\n                    } else if (roleChanged || trigger === 'update') {\n                        console.log(`üîÑ JWT role updated for ${email}: ${token.role} (trigger: ${trigger || 'refresh'})`);\n                    }\n                }\n            }\n            // Get user ID from database\n            if (email && !token.dbUserId) {\n                try {\n                    const { connectDB } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_mongodb_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\"));\n                    const User = (await __webpack_require__.e(/*! import() */ \"_rsc_models_User_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../models/User */ \"(rsc)/./models/User.js\"))).default;\n                    await connectDB();\n                    const dbUser = await User.findOne({\n                        email\n                    });\n                    if (dbUser) {\n                        token.dbUserId = dbUser._id.toString();\n                        console.log(`üÜî Set database user ID in token: ${token.dbUserId}`);\n                    } else {\n                        console.error(`‚ùå No user found in database for email: ${email}`);\n                    }\n                } catch (error) {\n                    console.error('Error getting user ID:', error);\n                }\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            // Add role, department, and ID to session\n            if (token) {\n                session.user.id = token.dbUserId; // This is the MongoDB user ID\n                session.user.role = token.role;\n                session.user.department = token.department;\n                session.user.employeeId = token.employeeId;\n                // Debug logging for session creation\n                console.log(`üìã Session created for ${session.user.email}:`, {\n                    id: session.user.id,\n                    role: session.user.role,\n                    department: session.user.department,\n                    hasDbUserId: !!token.dbUserId\n                });\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/login',\n        error: '/login'\n    },\n    session: {\n        strategy: 'jwt'\n    },\n    secret: process.env.NEXTAUTH_SECRET\n};\nconst handler = next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/[...nextauth]/route.js\n");

/***/ }),

/***/ "(rsc)/./app/api/security/scan/route.js":
/*!****************************************!*\
  !*** ./app/api/security/scan/route.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../auth/[...nextauth]/route */ \"(rsc)/./app/api/auth/[...nextauth]/route.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../lib/mongodb */ \"(rsc)/./lib/mongodb.js\");\n/* harmony import */ var _models_KeyAssignment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../models/KeyAssignment */ \"(rsc)/./models/KeyAssignment.js\");\n/* harmony import */ var _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../models/KeyTransaction */ \"(rsc)/./models/KeyTransaction.js\");\n/* harmony import */ var _models_Key__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../models/Key */ \"(rsc)/./models/Key.js\");\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../models/User */ \"(rsc)/./models/User.js\");\n\n\n\n\n\n\n\n\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || ![\n            'security',\n            'security_head'\n        ].includes(session.user.role)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { qrData, action } = await request.json();\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__.connectDB)();\n        // Parse QR code data\n        let parsedQRData;\n        try {\n            parsedQRData = typeof qrData === 'string' ? JSON.parse(qrData) : qrData;\n        } catch (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid QR code format'\n            }, {\n                status: 400\n            });\n        }\n        const { assignmentId, keyId, facultyId, expiresAt } = parsedQRData;\n        // Check if QR code is expired\n        if (expiresAt && Date.now() > expiresAt) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'QR code has expired'\n            }, {\n                status: 400\n            });\n        }\n        // Find the key assignment\n        const assignment = await _models_KeyAssignment__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findById(assignmentId).populate('keyId', 'name labName labNumber').populate('facultyId', 'name email');\n        if (!assignment) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Key assignment not found'\n            }, {\n                status: 404\n            });\n        }\n        // Verify the QR data matches the assignment\n        if (assignment.keyId._id.toString() !== keyId || assignment.facultyId._id.toString() !== facultyId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'QR code data mismatch'\n            }, {\n                status: 400\n            });\n        }\n        let result = {};\n        switch(action){\n            case 'collection':\n                // Handle key collection\n                if (assignment.status !== 'pending') {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: `Key cannot be collected. Current status: ${assignment.status}`\n                    }, {\n                        status: 400\n                    });\n                }\n                // Mark as collected\n                await assignment.markAsCollected(session.user.id);\n                // Log the transaction\n                await _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_5__[\"default\"].create({\n                    type: 'collected',\n                    keyId: assignment.keyId._id,\n                    facultyId: assignment.facultyId._id,\n                    securityPersonnelId: session.user.id,\n                    assignmentId: assignment._id,\n                    details: `Key collected by ${assignment.facultyId.name}`,\n                    qrCodeData: JSON.stringify(parsedQRData)\n                });\n                result = {\n                    success: true,\n                    message: 'Key collected successfully',\n                    keyName: assignment.keyId.name,\n                    facultyName: assignment.facultyId.name,\n                    collectedAt: new Date()\n                };\n                break;\n            case 'deposit':\n                // Handle key deposit/return\n                if (![\n                    'active',\n                    'overdue'\n                ].includes(assignment.status)) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: `Key cannot be returned. Current status: ${assignment.status}`\n                    }, {\n                        status: 400\n                    });\n                }\n                // Mark as returned\n                await assignment.markAsReturned(session.user.id, 'Returned via QR scan');\n                // Log the transaction\n                await _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_5__[\"default\"].create({\n                    type: 'returned',\n                    keyId: assignment.keyId._id,\n                    facultyId: assignment.facultyId._id,\n                    securityPersonnelId: session.user.id,\n                    assignmentId: assignment._id,\n                    details: `Key returned by ${assignment.facultyId.name}`,\n                    qrCodeData: JSON.stringify(parsedQRData)\n                });\n                result = {\n                    success: true,\n                    message: 'Key returned successfully',\n                    keyName: assignment.keyId.name,\n                    facultyName: assignment.facultyId.name,\n                    returnedAt: new Date(),\n                    wasOverdue: assignment.status === 'overdue'\n                };\n                break;\n            default:\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Invalid action'\n                }, {\n                    status: 400\n                });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error('Error processing QR scan:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n// Get scan history for security personnel\nasync function GET(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_auth_nextauth_route__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || ![\n            'security',\n            'security_head'\n        ].includes(session.user.role)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_3__.connectDB)();\n        const { searchParams } = new URL(request.url);\n        const limit = parseInt(searchParams.get('limit')) || 50;\n        const date = searchParams.get('date'); // YYYY-MM-DD format\n        // Build query\n        let query = {\n            securityPersonnelId: session.user.id\n        };\n        if (date) {\n            const startDate = new Date(date);\n            const endDate = new Date(startDate);\n            endDate.setDate(endDate.getDate() + 1);\n            query.timestamp = {\n                $gte: startDate,\n                $lt: endDate\n            };\n        }\n        // Fetch scan history\n        const transactions = await _models_KeyTransaction__WEBPACK_IMPORTED_MODULE_5__[\"default\"].find(query).populate('keyId', 'name labName labNumber').populate('facultyId', 'name email').sort({\n            timestamp: -1\n        }).limit(limit);\n        const scanHistory = transactions.map((transaction)=>({\n                id: transaction._id,\n                type: transaction.type,\n                keyName: transaction.keyId?.name || 'Unknown Key',\n                labName: transaction.keyId?.labName || 'Unknown Lab',\n                facultyName: transaction.facultyId?.name || 'Unknown Faculty',\n                timestamp: transaction.timestamp,\n                details: transaction.details,\n                status: transaction.status\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            scanHistory\n        });\n    } catch (error) {\n        console.error('Error fetching scan history:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/security/scan/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectDB: () => (/* binding */ connectDB),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   disconnectDB: () => (/* binding */ disconnectDB)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/vnr-key-management';\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections growing exponentially\n * during API Route usage.\n */ let cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function connectDB() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false,\n            maxPoolSize: 10,\n            serverSelectionTimeoutMS: 5000,\n            socketTimeoutMS: 45000,\n            family: 4\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log('‚úÖ Connected to MongoDB');\n            return mongoose;\n        }).catch((error)=>{\n            console.error('‚ùå MongoDB connection error:', error);\n            throw error;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\nasync function disconnectDB() {\n    if (cached.conn) {\n        await cached.conn.disconnect();\n        cached.conn = null;\n        cached.promise = null;\n        console.log('üîå Disconnected from MongoDB');\n    }\n}\n// Connection event handlers\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('connected', ()=>{\n    console.log('üîó Mongoose connected to MongoDB');\n});\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('error', (err)=>{\n    console.error('‚ùå Mongoose connection error:', err);\n});\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().connection.on('disconnected', ()=>{\n    console.log('üîå Mongoose disconnected from MongoDB');\n});\n// Graceful shutdown\nprocess.on('SIGINT', async ()=>{\n    await disconnectDB();\n    process.exit(0);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbW9uZ29kYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNGLFdBQVcsSUFBSTtBQUUvQyxJQUFJLENBQUNBLGFBQWE7SUFDaEIsTUFBTSxJQUFJRyxNQUFNO0FBQ2xCO0FBRUE7Ozs7Q0FJQyxHQUNELElBQUlDLFNBQVNDLE9BQU9OLFFBQVE7QUFFNUIsSUFBSSxDQUFDSyxRQUFRO0lBQ1hBLFNBQVNDLE9BQU9OLFFBQVEsR0FBRztRQUFFTyxNQUFNO1FBQU1DLFNBQVM7SUFBSztBQUN6RDtBQUVPLGVBQWVDO0lBQ3BCLElBQUlKLE9BQU9FLElBQUksRUFBRTtRQUNmLE9BQU9GLE9BQU9FLElBQUk7SUFDcEI7SUFFQSxJQUFJLENBQUNGLE9BQU9HLE9BQU8sRUFBRTtRQUNuQixNQUFNRSxPQUFPO1lBQ1hDLGdCQUFnQjtZQUNoQkMsYUFBYTtZQUNiQywwQkFBMEI7WUFDMUJDLGlCQUFpQjtZQUNqQkMsUUFBUTtRQUNWO1FBRUFWLE9BQU9HLE9BQU8sR0FBR1IsdURBQWdCLENBQUNDLGFBQWFTLE1BQU1PLElBQUksQ0FBQyxDQUFDakI7WUFDekRrQixRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPbkI7UUFDVCxHQUFHb0IsS0FBSyxDQUFDLENBQUNDO1lBQ1JILFFBQVFHLEtBQUssQ0FBQywrQkFBK0JBO1lBQzdDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBLElBQUk7UUFDRmhCLE9BQU9FLElBQUksR0FBRyxNQUFNRixPQUFPRyxPQUFPO0lBQ3BDLEVBQUUsT0FBT2MsR0FBRztRQUNWakIsT0FBT0csT0FBTyxHQUFHO1FBQ2pCLE1BQU1jO0lBQ1I7SUFFQSxPQUFPakIsT0FBT0UsSUFBSTtBQUNwQjtBQUVPLGVBQWVnQjtJQUNwQixJQUFJbEIsT0FBT0UsSUFBSSxFQUFFO1FBQ2YsTUFBTUYsT0FBT0UsSUFBSSxDQUFDaUIsVUFBVTtRQUM1Qm5CLE9BQU9FLElBQUksR0FBRztRQUNkRixPQUFPRyxPQUFPLEdBQUc7UUFDakJVLFFBQVFDLEdBQUcsQ0FBQztJQUNkO0FBQ0Y7QUFFQSw0QkFBNEI7QUFDNUJuQiwwREFBbUIsQ0FBQzBCLEVBQUUsQ0FBQyxhQUFhO0lBQ2xDUixRQUFRQyxHQUFHLENBQUM7QUFDZDtBQUVBbkIsMERBQW1CLENBQUMwQixFQUFFLENBQUMsU0FBUyxDQUFDQztJQUMvQlQsUUFBUUcsS0FBSyxDQUFDLGdDQUFnQ007QUFDaEQ7QUFFQTNCLDBEQUFtQixDQUFDMEIsRUFBRSxDQUFDLGdCQUFnQjtJQUNyQ1IsUUFBUUMsR0FBRyxDQUFDO0FBQ2Q7QUFFQSxvQkFBb0I7QUFDcEJqQixRQUFRd0IsRUFBRSxDQUFDLFVBQVU7SUFDbkIsTUFBTUg7SUFDTnJCLFFBQVEwQixJQUFJLENBQUM7QUFDZjtBQUVBLGlFQUFlbkIsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL25ldy9Jbm5vdmF0aW9uL2tleS1tYW5hZ2VtZW50L2xpYi9tb25nb2RiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IE1PTkdPREJfVVJJID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgfHwgJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvdm5yLWtleS1tYW5hZ2VtZW50JztcblxuaWYgKCFNT05HT0RCX1VSSSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBkZWZpbmUgdGhlIE1PTkdPREJfVVJJIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsJyk7XG59XG5cbi8qKlxuICogR2xvYmFsIGlzIHVzZWQgaGVyZSB0byBtYWludGFpbiBhIGNhY2hlZCBjb25uZWN0aW9uIGFjcm9zcyBob3QgcmVsb2Fkc1xuICogaW4gZGV2ZWxvcG1lbnQuIFRoaXMgcHJldmVudHMgY29ubmVjdGlvbnMgZ3Jvd2luZyBleHBvbmVudGlhbGx5XG4gKiBkdXJpbmcgQVBJIFJvdXRlIHVzYWdlLlxuICovXG5sZXQgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlO1xuXG5pZiAoIWNhY2hlZCkge1xuICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3REQigpIHtcbiAgaWYgKGNhY2hlZC5jb25uKSB7XG4gICAgcmV0dXJuIGNhY2hlZC5jb25uO1xuICB9XG5cbiAgaWYgKCFjYWNoZWQucHJvbWlzZSkge1xuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXG4gICAgICBtYXhQb29sU2l6ZTogMTAsXG4gICAgICBzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVM6IDUwMDAsXG4gICAgICBzb2NrZXRUaW1lb3V0TVM6IDQ1MDAwLFxuICAgICAgZmFtaWx5OiA0XG4gICAgfTtcblxuICAgIGNhY2hlZC5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cykudGhlbigobW9uZ29vc2UpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgQ29ubmVjdGVkIHRvIE1vbmdvREInKTtcbiAgICAgIHJldHVybiBtb25nb29zZTtcbiAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBNb25nb0RCIGNvbm5lY3Rpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNhY2hlZC5jb25uID0gYXdhaXQgY2FjaGVkLnByb21pc2U7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjYWNoZWQucHJvbWlzZSA9IG51bGw7XG4gICAgdGhyb3cgZTtcbiAgfVxuXG4gIHJldHVybiBjYWNoZWQuY29ubjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpc2Nvbm5lY3REQigpIHtcbiAgaWYgKGNhY2hlZC5jb25uKSB7XG4gICAgYXdhaXQgY2FjaGVkLmNvbm4uZGlzY29ubmVjdCgpO1xuICAgIGNhY2hlZC5jb25uID0gbnVsbDtcbiAgICBjYWNoZWQucHJvbWlzZSA9IG51bGw7XG4gICAgY29uc29sZS5sb2coJ/CflIwgRGlzY29ubmVjdGVkIGZyb20gTW9uZ29EQicpO1xuICB9XG59XG5cbi8vIENvbm5lY3Rpb24gZXZlbnQgaGFuZGxlcnNcbm1vbmdvb3NlLmNvbm5lY3Rpb24ub24oJ2Nvbm5lY3RlZCcsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ/CflJcgTW9uZ29vc2UgY29ubmVjdGVkIHRvIE1vbmdvREInKTtcbn0pO1xuXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgY29uc29sZS5lcnJvcign4p2MIE1vbmdvb3NlIGNvbm5lY3Rpb24gZXJyb3I6JywgZXJyKTtcbn0pO1xuXG5tb25nb29zZS5jb25uZWN0aW9uLm9uKCdkaXNjb25uZWN0ZWQnLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCfwn5SMIE1vbmdvb3NlIGRpc2Nvbm5lY3RlZCBmcm9tIE1vbmdvREInKTtcbn0pO1xuXG4vLyBHcmFjZWZ1bCBzaHV0ZG93blxucHJvY2Vzcy5vbignU0lHSU5UJywgYXN5bmMgKCkgPT4ge1xuICBhd2FpdCBkaXNjb25uZWN0REIoKTtcbiAgcHJvY2Vzcy5leGl0KDApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3REQjtcbiJdLCJuYW1lcyI6WyJtb25nb29zZSIsIk1PTkdPREJfVVJJIiwicHJvY2VzcyIsImVudiIsIkVycm9yIiwiY2FjaGVkIiwiZ2xvYmFsIiwiY29ubiIsInByb21pc2UiLCJjb25uZWN0REIiLCJvcHRzIiwiYnVmZmVyQ29tbWFuZHMiLCJtYXhQb29sU2l6ZSIsInNlcnZlclNlbGVjdGlvblRpbWVvdXRNUyIsInNvY2tldFRpbWVvdXRNUyIsImZhbWlseSIsImNvbm5lY3QiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyb3IiLCJlIiwiZGlzY29ubmVjdERCIiwiZGlzY29ubmVjdCIsImNvbm5lY3Rpb24iLCJvbiIsImVyciIsImV4aXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/mongodb.js\n");

/***/ }),

/***/ "(rsc)/./lib/userRoles.js":
/*!**************************!*\
  !*** ./lib/userRoles.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VALID_ROLES: () => (/* binding */ VALID_ROLES),\n/* harmony export */   deleteUserRole: () => (/* binding */ deleteUserRole),\n/* harmony export */   getAllUserRoles: () => (/* binding */ getAllUserRoles),\n/* harmony export */   getUserRole: () => (/* binding */ getUserRole),\n/* harmony export */   isValidRole: () => (/* binding */ isValidRole),\n/* harmony export */   setUserRole: () => (/* binding */ setUserRole),\n/* harmony export */   userRoles: () => (/* binding */ userRoles)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// Shared user roles storage\n// In production, this should be replaced with a database\n\n\n// File-based storage for persistence across server restarts\nconst ROLES_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), '.user-roles.json');\n// Initialize userRoles Map from file if it exists\nconst userRoles = new Map();\n// Load existing roles from file on startup\nfunction loadRolesFromFile() {\n    try {\n        if (fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(ROLES_FILE)) {\n            const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(ROLES_FILE, 'utf8');\n            const rolesData = JSON.parse(data);\n            Object.entries(rolesData).forEach(([email, userData])=>{\n                userRoles.set(email, userData);\n            });\n            console.log(`üìÅ Loaded ${userRoles.size} user roles from file`);\n        }\n    } catch (error) {\n        console.error('Error loading roles from file:', error);\n    }\n}\n// Save roles to file\nfunction saveRolesToFile() {\n    try {\n        const rolesData = Object.fromEntries(userRoles);\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(ROLES_FILE, JSON.stringify(rolesData, null, 2));\n    } catch (error) {\n        console.error('Error saving roles to file:', error);\n    }\n}\n// Load roles on module initialization\nloadRolesFromFile();\n// Helper functions for role management\nfunction setUserRole(email, role, updatedBy = 'system') {\n    userRoles.set(email, {\n        role,\n        updatedAt: new Date().toISOString(),\n        updatedBy\n    });\n    // Save to file for persistence\n    saveRolesToFile();\n    console.log(`‚úÖ Role set for ${email}: ${role} (saved to file)`);\n}\nfunction getUserRole(email) {\n    const userData = userRoles.get(email);\n    const role = userData ? userData.role : null;\n    // Debug logging to understand what's happening\n    if (role) {\n        console.log(`üîç getUserRole: Found stored role for ${email}: ${role}`);\n    } else {\n        console.log(`‚ùå getUserRole: No stored role found for ${email}. Available roles:`, Array.from(userRoles.keys()));\n    }\n    return role;\n}\nfunction getAllUserRoles() {\n    return Array.from(userRoles.entries()).map(([email, data])=>({\n            email,\n            ...data\n        }));\n}\nfunction deleteUserRole(email) {\n    const deleted = userRoles.delete(email);\n    if (deleted) {\n        // Save to file after deletion\n        saveRolesToFile();\n        console.log(`üóëÔ∏è Role deleted for ${email} (saved to file)`);\n    }\n    return deleted;\n}\n// Valid roles\nconst VALID_ROLES = [\n    'faculty',\n    'hod',\n    'security',\n    'security_head',\n    'admin'\n];\nfunction isValidRole(role) {\n    return VALID_ROLES.includes(role);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdXNlclJvbGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNEJBQTRCO0FBQzVCLHlEQUF5RDtBQUVyQztBQUNJO0FBRXhCLDREQUE0RDtBQUM1RCxNQUFNRSxhQUFhRCxnREFBUyxDQUFDRyxRQUFRQyxHQUFHLElBQUk7QUFFNUMsa0RBQWtEO0FBQzNDLE1BQU1DLFlBQVksSUFBSUMsTUFBTTtBQUVuQywyQ0FBMkM7QUFDM0MsU0FBU0M7SUFDUCxJQUFJO1FBQ0YsSUFBSVIsb0RBQWEsQ0FBQ0UsYUFBYTtZQUM3QixNQUFNUSxPQUFPVixzREFBZSxDQUFDRSxZQUFZO1lBQ3pDLE1BQU1VLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ0o7WUFDN0JLLE9BQU9DLE9BQU8sQ0FBQ0osV0FBV0ssT0FBTyxDQUFDLENBQUMsQ0FBQ0MsT0FBT0MsU0FBUztnQkFDbERiLFVBQVVjLEdBQUcsQ0FBQ0YsT0FBT0M7WUFDdkI7WUFDQUUsUUFBUUMsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFaEIsVUFBVWlCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQztRQUNoRTtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsa0NBQWtDQTtJQUNsRDtBQUNGO0FBRUEscUJBQXFCO0FBQ3JCLFNBQVNDO0lBQ1AsSUFBSTtRQUNGLE1BQU1iLFlBQVlHLE9BQU9XLFdBQVcsQ0FBQ3BCO1FBQ3JDTix1REFBZ0IsQ0FBQ0UsWUFBWVcsS0FBS2UsU0FBUyxDQUFDaEIsV0FBVyxNQUFNO0lBQy9ELEVBQUUsT0FBT1ksT0FBTztRQUNkSCxRQUFRRyxLQUFLLENBQUMsK0JBQStCQTtJQUMvQztBQUNGO0FBRUEsc0NBQXNDO0FBQ3RDaEI7QUFFQSx1Q0FBdUM7QUFDaEMsU0FBU3FCLFlBQVlYLEtBQUssRUFBRVksSUFBSSxFQUFFQyxZQUFZLFFBQVE7SUFDM0R6QixVQUFVYyxHQUFHLENBQUNGLE9BQU87UUFDbkJZO1FBQ0FFLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztRQUNqQ0g7SUFDRjtJQUVBLCtCQUErQjtJQUMvQk47SUFFQUosUUFBUUMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFSixNQUFNLEVBQUUsRUFBRVksS0FBSyxnQkFBZ0IsQ0FBQztBQUNoRTtBQUVPLFNBQVNLLFlBQVlqQixLQUFLO0lBQy9CLE1BQU1DLFdBQVdiLFVBQVU4QixHQUFHLENBQUNsQjtJQUMvQixNQUFNWSxPQUFPWCxXQUFXQSxTQUFTVyxJQUFJLEdBQUc7SUFFeEMsK0NBQStDO0lBQy9DLElBQUlBLE1BQU07UUFDUlQsUUFBUUMsR0FBRyxDQUFDLENBQUMsc0NBQXNDLEVBQUVKLE1BQU0sRUFBRSxFQUFFWSxNQUFNO0lBQ3ZFLE9BQU87UUFDTFQsUUFBUUMsR0FBRyxDQUFDLENBQUMsd0NBQXdDLEVBQUVKLE1BQU0sa0JBQWtCLENBQUMsRUFDOUVtQixNQUFNQyxJQUFJLENBQUNoQyxVQUFVaUMsSUFBSTtJQUM3QjtJQUVBLE9BQU9UO0FBQ1Q7QUFFTyxTQUFTVTtJQUNkLE9BQU9ILE1BQU1DLElBQUksQ0FBQ2hDLFVBQVVVLE9BQU8sSUFBSXlCLEdBQUcsQ0FBQyxDQUFDLENBQUN2QixPQUFPUixLQUFLLEdBQU07WUFDN0RRO1lBQ0EsR0FBR1IsSUFBSTtRQUNUO0FBQ0Y7QUFFTyxTQUFTZ0MsZUFBZXhCLEtBQUs7SUFDbEMsTUFBTXlCLFVBQVVyQyxVQUFVc0MsTUFBTSxDQUFDMUI7SUFDakMsSUFBSXlCLFNBQVM7UUFDWCw4QkFBOEI7UUFDOUJsQjtRQUNBSixRQUFRQyxHQUFHLENBQUMsQ0FBQyxxQkFBcUIsRUFBRUosTUFBTSxnQkFBZ0IsQ0FBQztJQUM3RDtJQUNBLE9BQU95QjtBQUNUO0FBRUEsY0FBYztBQUNQLE1BQU1FLGNBQWM7SUFBQztJQUFXO0lBQU87SUFBWTtJQUFpQjtDQUFRLENBQUM7QUFFN0UsU0FBU0MsWUFBWWhCLElBQUk7SUFDOUIsT0FBT2UsWUFBWUUsUUFBUSxDQUFDakI7QUFDOUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXcvSW5ub3ZhdGlvbi9rZXktbWFuYWdlbWVudC9saWIvdXNlclJvbGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNoYXJlZCB1c2VyIHJvbGVzIHN0b3JhZ2Vcbi8vIEluIHByb2R1Y3Rpb24sIHRoaXMgc2hvdWxkIGJlIHJlcGxhY2VkIHdpdGggYSBkYXRhYmFzZVxuXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbi8vIEZpbGUtYmFzZWQgc3RvcmFnZSBmb3IgcGVyc2lzdGVuY2UgYWNyb3NzIHNlcnZlciByZXN0YXJ0c1xuY29uc3QgUk9MRVNfRklMRSA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnLnVzZXItcm9sZXMuanNvbicpO1xuXG4vLyBJbml0aWFsaXplIHVzZXJSb2xlcyBNYXAgZnJvbSBmaWxlIGlmIGl0IGV4aXN0c1xuZXhwb3J0IGNvbnN0IHVzZXJSb2xlcyA9IG5ldyBNYXAoKTtcblxuLy8gTG9hZCBleGlzdGluZyByb2xlcyBmcm9tIGZpbGUgb24gc3RhcnR1cFxuZnVuY3Rpb24gbG9hZFJvbGVzRnJvbUZpbGUoKSB7XG4gIHRyeSB7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMoUk9MRVNfRklMRSkpIHtcbiAgICAgIGNvbnN0IGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMoUk9MRVNfRklMRSwgJ3V0ZjgnKTtcbiAgICAgIGNvbnN0IHJvbGVzRGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICBPYmplY3QuZW50cmllcyhyb2xlc0RhdGEpLmZvckVhY2goKFtlbWFpbCwgdXNlckRhdGFdKSA9PiB7XG4gICAgICAgIHVzZXJSb2xlcy5zZXQoZW1haWwsIHVzZXJEYXRhKTtcbiAgICAgIH0pO1xuICAgICAgY29uc29sZS5sb2coYPCfk4EgTG9hZGVkICR7dXNlclJvbGVzLnNpemV9IHVzZXIgcm9sZXMgZnJvbSBmaWxlYCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgcm9sZXMgZnJvbSBmaWxlOicsIGVycm9yKTtcbiAgfVxufVxuXG4vLyBTYXZlIHJvbGVzIHRvIGZpbGVcbmZ1bmN0aW9uIHNhdmVSb2xlc1RvRmlsZSgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByb2xlc0RhdGEgPSBPYmplY3QuZnJvbUVudHJpZXModXNlclJvbGVzKTtcbiAgICBmcy53cml0ZUZpbGVTeW5jKFJPTEVTX0ZJTEUsIEpTT04uc3RyaW5naWZ5KHJvbGVzRGF0YSwgbnVsbCwgMikpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyByb2xlcyB0byBmaWxlOicsIGVycm9yKTtcbiAgfVxufVxuXG4vLyBMb2FkIHJvbGVzIG9uIG1vZHVsZSBpbml0aWFsaXphdGlvblxubG9hZFJvbGVzRnJvbUZpbGUoKTtcblxuLy8gSGVscGVyIGZ1bmN0aW9ucyBmb3Igcm9sZSBtYW5hZ2VtZW50XG5leHBvcnQgZnVuY3Rpb24gc2V0VXNlclJvbGUoZW1haWwsIHJvbGUsIHVwZGF0ZWRCeSA9ICdzeXN0ZW0nKSB7XG4gIHVzZXJSb2xlcy5zZXQoZW1haWwsIHtcbiAgICByb2xlLFxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIHVwZGF0ZWRCeVxuICB9KTtcblxuICAvLyBTYXZlIHRvIGZpbGUgZm9yIHBlcnNpc3RlbmNlXG4gIHNhdmVSb2xlc1RvRmlsZSgpO1xuXG4gIGNvbnNvbGUubG9nKGDinIUgUm9sZSBzZXQgZm9yICR7ZW1haWx9OiAke3JvbGV9IChzYXZlZCB0byBmaWxlKWApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VXNlclJvbGUoZW1haWwpIHtcbiAgY29uc3QgdXNlckRhdGEgPSB1c2VyUm9sZXMuZ2V0KGVtYWlsKTtcbiAgY29uc3Qgcm9sZSA9IHVzZXJEYXRhID8gdXNlckRhdGEucm9sZSA6IG51bGw7XG5cbiAgLy8gRGVidWcgbG9nZ2luZyB0byB1bmRlcnN0YW5kIHdoYXQncyBoYXBwZW5pbmdcbiAgaWYgKHJvbGUpIHtcbiAgICBjb25zb2xlLmxvZyhg8J+UjSBnZXRVc2VyUm9sZTogRm91bmQgc3RvcmVkIHJvbGUgZm9yICR7ZW1haWx9OiAke3JvbGV9YCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coYOKdjCBnZXRVc2VyUm9sZTogTm8gc3RvcmVkIHJvbGUgZm91bmQgZm9yICR7ZW1haWx9LiBBdmFpbGFibGUgcm9sZXM6YCxcbiAgICAgIEFycmF5LmZyb20odXNlclJvbGVzLmtleXMoKSkpO1xuICB9XG5cbiAgcmV0dXJuIHJvbGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGxVc2VyUm9sZXMoKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKHVzZXJSb2xlcy5lbnRyaWVzKCkpLm1hcCgoW2VtYWlsLCBkYXRhXSkgPT4gKHtcbiAgICBlbWFpbCxcbiAgICAuLi5kYXRhXG4gIH0pKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVVzZXJSb2xlKGVtYWlsKSB7XG4gIGNvbnN0IGRlbGV0ZWQgPSB1c2VyUm9sZXMuZGVsZXRlKGVtYWlsKTtcbiAgaWYgKGRlbGV0ZWQpIHtcbiAgICAvLyBTYXZlIHRvIGZpbGUgYWZ0ZXIgZGVsZXRpb25cbiAgICBzYXZlUm9sZXNUb0ZpbGUoKTtcbiAgICBjb25zb2xlLmxvZyhg8J+Xke+4jyBSb2xlIGRlbGV0ZWQgZm9yICR7ZW1haWx9IChzYXZlZCB0byBmaWxlKWApO1xuICB9XG4gIHJldHVybiBkZWxldGVkO1xufVxuXG4vLyBWYWxpZCByb2xlc1xuZXhwb3J0IGNvbnN0IFZBTElEX1JPTEVTID0gWydmYWN1bHR5JywgJ2hvZCcsICdzZWN1cml0eScsICdzZWN1cml0eV9oZWFkJywgJ2FkbWluJ107XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUm9sZShyb2xlKSB7XG4gIHJldHVybiBWQUxJRF9ST0xFUy5pbmNsdWRlcyhyb2xlKTtcbn1cbiJdLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJST0xFU19GSUxFIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJ1c2VyUm9sZXMiLCJNYXAiLCJsb2FkUm9sZXNGcm9tRmlsZSIsImV4aXN0c1N5bmMiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwicm9sZXNEYXRhIiwiSlNPTiIsInBhcnNlIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJlbWFpbCIsInVzZXJEYXRhIiwic2V0IiwiY29uc29sZSIsImxvZyIsInNpemUiLCJlcnJvciIsInNhdmVSb2xlc1RvRmlsZSIsImZyb21FbnRyaWVzIiwid3JpdGVGaWxlU3luYyIsInN0cmluZ2lmeSIsInNldFVzZXJSb2xlIiwicm9sZSIsInVwZGF0ZWRCeSIsInVwZGF0ZWRBdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImdldFVzZXJSb2xlIiwiZ2V0IiwiQXJyYXkiLCJmcm9tIiwia2V5cyIsImdldEFsbFVzZXJSb2xlcyIsIm1hcCIsImRlbGV0ZVVzZXJSb2xlIiwiZGVsZXRlZCIsImRlbGV0ZSIsIlZBTElEX1JPTEVTIiwiaXNWYWxpZFJvbGUiLCJpbmNsdWRlcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/userRoles.js\n");

/***/ }),

/***/ "(rsc)/./models/Key.js":
/*!***********************!*\
  !*** ./models/Key.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeySchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    labName: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    labNumber: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    department: {\n        type: String,\n        required: true,\n        enum: [\n            'Computer Science',\n            'Information Technology',\n            'Electronics',\n            'Mechanical',\n            'Civil',\n            'Chemical',\n            'Physics',\n            'Chemistry',\n            'Mathematics'\n        ]\n    },\n    description: {\n        type: String,\n        trim: true\n    },\n    keyType: {\n        type: String,\n        enum: [\n            'lab',\n            'office',\n            'storage',\n            'equipment'\n        ],\n        default: 'lab'\n    },\n    location: {\n        building: String,\n        floor: String,\n        room: String\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    createdBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    },\n    // Security features\n    requiresApproval: {\n        type: Boolean,\n        default: false\n    },\n    maxAssignmentDuration: {\n        type: Number,\n        default: 24\n    },\n    // Tracking\n    totalAssignments: {\n        type: Number,\n        default: 0\n    },\n    currentStatus: {\n        type: String,\n        enum: [\n            'available',\n            'assigned',\n            'maintenance',\n            'lost'\n        ],\n        default: 'available'\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeySchema.index({\n    department: 1,\n    isActive: 1\n});\nKeySchema.index({\n    labNumber: 1\n});\nKeySchema.index({\n    currentStatus: 1\n});\n// Virtual for current assignment\nKeySchema.virtual('currentAssignment', {\n    ref: 'KeyAssignment',\n    localField: '_id',\n    foreignField: 'keyId',\n    justOne: true,\n    match: {\n        status: {\n            $in: [\n                'active',\n                'overdue'\n            ]\n        }\n    }\n});\n// Methods\nKeySchema.methods.isAvailable = function() {\n    return this.currentStatus === 'available' && this.isActive;\n};\nKeySchema.methods.getUsageStats = async function() {\n    const KeyAssignment = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyAssignment');\n    const stats = await KeyAssignment.aggregate([\n        {\n            $match: {\n                keyId: this._id\n            }\n        },\n        {\n            $group: {\n                _id: null,\n                totalAssignments: {\n                    $sum: 1\n                },\n                averageDuration: {\n                    $avg: '$actualDuration'\n                },\n                overdueCount: {\n                    $sum: {\n                        $cond: [\n                            {\n                                $eq: [\n                                    '$status',\n                                    'overdue'\n                                ]\n                            },\n                            1,\n                            0\n                        ]\n                    }\n                }\n            }\n        }\n    ]);\n    return stats[0] || {\n        totalAssignments: 0,\n        averageDuration: 0,\n        overdueCount: 0\n    };\n};\n// Static methods\nKeySchema.statics.findByDepartment = function(department) {\n    return this.find({\n        department,\n        isActive: true\n    });\n};\nKeySchema.statics.getAvailableKeys = function(department = null) {\n    const query = {\n        currentStatus: 'available',\n        isActive: true\n    };\n    if (department) query.department = department;\n    return this.find(query);\n};\n// Pre-save middleware\nKeySchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\n// Post-save middleware to update total assignments\nKeySchema.post('save', async function(doc) {\n    if (doc.isNew) {\n        // Log key creation\n        console.log(`New key created: ${doc.name} for ${doc.department}`);\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Key || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Key', KeySchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/Key.js\n");

/***/ }),

/***/ "(rsc)/./models/KeyAssignment.js":
/*!*********************************!*\
  !*** ./models/KeyAssignment.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeyAssignmentSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    keyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'Key',\n        required: true\n    },\n    facultyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    assignedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    assignedDate: {\n        type: Date,\n        default: Date.now\n    },\n    dueDate: {\n        type: Date,\n        required: true\n    },\n    returnedDate: {\n        type: Date\n    },\n    accessType: {\n        type: String,\n        enum: [\n            'permanent',\n            'temporary',\n            'shared'\n        ],\n        default: 'temporary'\n    },\n    status: {\n        type: String,\n        enum: [\n            'pending',\n            'active',\n            'returned',\n            'overdue',\n            'cancelled'\n        ],\n        default: 'pending'\n    },\n    requestReason: {\n        type: String,\n        trim: true\n    },\n    returnReason: {\n        type: String,\n        trim: true\n    },\n    // QR Code tracking\n    qrCodeGenerated: {\n        type: Boolean,\n        default: false\n    },\n    qrCodeGeneratedAt: {\n        type: Date\n    },\n    qrCodeUsedAt: {\n        type: Date\n    },\n    // Collection/Return tracking\n    collectedAt: {\n        type: Date\n    },\n    collectedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User' // Security personnel\n    },\n    returnedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User' // Security personnel\n    },\n    // Usage tracking\n    lastUsed: {\n        type: Date\n    },\n    usageCount: {\n        type: Number,\n        default: 0\n    },\n    actualDuration: {\n        type: Number // in hours\n    },\n    // Notifications\n    remindersSent: {\n        type: Number,\n        default: 0\n    },\n    lastReminderSent: {\n        type: Date\n    },\n    // Approval workflow\n    approvalRequired: {\n        type: Boolean,\n        default: false\n    },\n    approvedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    approvedAt: {\n        type: Date\n    },\n    rejectedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    rejectedAt: {\n        type: Date\n    },\n    rejectionReason: {\n        type: String\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeyAssignmentSchema.index({\n    facultyId: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    keyId: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    dueDate: 1,\n    status: 1\n});\nKeyAssignmentSchema.index({\n    status: 1,\n    assignedDate: -1\n});\n// Virtual for checking if overdue\nKeyAssignmentSchema.virtual('isOverdue').get(function() {\n    return this.status === 'active' && new Date() > this.dueDate;\n});\n// Virtual for days overdue\nKeyAssignmentSchema.virtual('daysOverdue').get(function() {\n    if (!this.isOverdue) return 0;\n    const diffTime = new Date() - this.dueDate;\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n});\n// Virtual for assignment duration\nKeyAssignmentSchema.virtual('plannedDuration').get(function() {\n    const diffTime = this.dueDate - this.assignedDate;\n    return Math.ceil(diffTime / (1000 * 60 * 60)); // in hours\n});\n// Methods\nKeyAssignmentSchema.methods.markAsCollected = function(securityPersonnelId) {\n    this.status = 'active';\n    this.collectedAt = new Date();\n    this.collectedBy = securityPersonnelId;\n    this.qrCodeUsedAt = new Date();\n    return this.save();\n};\nKeyAssignmentSchema.methods.markAsReturned = function(securityPersonnelId, returnReason = '') {\n    this.status = 'returned';\n    this.returnedDate = new Date();\n    this.returnedBy = securityPersonnelId;\n    this.returnReason = returnReason;\n    // Calculate actual duration\n    if (this.collectedAt) {\n        const diffTime = this.returnedDate - this.collectedAt;\n        this.actualDuration = Math.ceil(diffTime / (1000 * 60 * 60));\n    }\n    return this.save();\n};\nKeyAssignmentSchema.methods.generateQRCode = function() {\n    this.qrCodeGenerated = true;\n    this.qrCodeGeneratedAt = new Date();\n    return this.save();\n};\nKeyAssignmentSchema.methods.sendReminder = async function() {\n    this.remindersSent += 1;\n    this.lastReminderSent = new Date();\n    await this.save();\n// Here you would integrate with your email service\n// emailService.sendOverdueReminder(...)\n};\n// Static methods\nKeyAssignmentSchema.statics.findOverdue = function() {\n    return this.find({\n        status: 'active',\n        dueDate: {\n            $lt: new Date()\n        }\n    }).populate('keyId facultyId');\n};\nKeyAssignmentSchema.statics.findByFaculty = function(facultyId, status = null) {\n    const query = {\n        facultyId\n    };\n    if (status) query.status = status;\n    return this.find(query).populate('keyId');\n};\nKeyAssignmentSchema.statics.getDepartmentStats = function(department) {\n    return this.aggregate([\n        {\n            $lookup: {\n                from: 'keys',\n                localField: 'keyId',\n                foreignField: '_id',\n                as: 'key'\n            }\n        },\n        {\n            $match: {\n                'key.department': department\n            }\n        },\n        {\n            $group: {\n                _id: '$status',\n                count: {\n                    $sum: 1\n                },\n                avgDuration: {\n                    $avg: '$actualDuration'\n                }\n            }\n        }\n    ]);\n};\n// Pre-save middleware\nKeyAssignmentSchema.pre('save', function(next) {\n    // Auto-update status to overdue if past due date\n    if (this.status === 'active' && new Date() > this.dueDate) {\n        this.status = 'overdue';\n    }\n    next();\n});\n// Post-save middleware\nKeyAssignmentSchema.post('save', async function(doc) {\n    // Update key's current status\n    const Key = mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('Key');\n    const key = await Key.findById(doc.keyId);\n    if (key) {\n        if (doc.status === 'active' || doc.status === 'overdue') {\n            key.currentStatus = 'assigned';\n        } else if (doc.status === 'returned' || doc.status === 'cancelled') {\n            key.currentStatus = 'available';\n        }\n        await key.save();\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).KeyAssignment || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyAssignment', KeyAssignmentSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/KeyAssignment.js\n");

/***/ }),

/***/ "(rsc)/./models/KeyTransaction.js":
/*!**********************************!*\
  !*** ./models/KeyTransaction.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst KeyTransactionSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    type: {\n        type: String,\n        enum: [\n            'requested',\n            'approved',\n            'rejected',\n            'collected',\n            'returned',\n            'shared',\n            'share_revoked',\n            'overdue_reminder'\n        ],\n        required: true\n    },\n    keyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'Key',\n        required: true\n    },\n    facultyId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        required: true\n    },\n    securityPersonnelId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    assignmentId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'KeyAssignment'\n    },\n    timestamp: {\n        type: Date,\n        default: Date.now\n    },\n    details: {\n        type: String,\n        trim: true\n    },\n    status: {\n        type: String,\n        enum: [\n            'pending',\n            'completed',\n            'failed',\n            'cancelled'\n        ],\n        default: 'completed'\n    },\n    // QR Code related data\n    qrCodeData: {\n        type: String // Encrypted QR code data\n    },\n    qrCodeExpiry: {\n        type: Date\n    },\n    // Sharing related fields\n    sharedWith: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    sharedDuration: {\n        type: String // e.g., \"4 hours\", \"2 days\"\n    },\n    sharingMessage: {\n        type: String\n    },\n    // Location and device info\n    location: {\n        latitude: Number,\n        longitude: Number,\n        address: String\n    },\n    deviceInfo: {\n        userAgent: String,\n        ipAddress: String,\n        deviceType: String // mobile, tablet, desktop\n    },\n    // Additional metadata\n    metadata: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.Mixed,\n        default: {}\n    },\n    // Approval workflow\n    approvedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User'\n    },\n    approvalNotes: {\n        type: String\n    },\n    // Error handling\n    errorMessage: {\n        type: String\n    },\n    retryCount: {\n        type: Number,\n        default: 0\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\nKeyTransactionSchema.index({\n    facultyId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    keyId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    type: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    securityPersonnelId: 1,\n    timestamp: -1\n});\nKeyTransactionSchema.index({\n    timestamp: -1\n});\n// Virtual for formatted timestamp\nKeyTransactionSchema.virtual('formattedTimestamp').get(function() {\n    return {\n        date: this.timestamp.toLocaleDateString(),\n        time: this.timestamp.toLocaleTimeString(),\n        relative: getRelativeTime(this.timestamp)\n    };\n});\n// Methods\nKeyTransactionSchema.methods.markAsCompleted = function(details = '') {\n    this.status = 'completed';\n    if (details) this.details = details;\n    return this.save();\n};\nKeyTransactionSchema.methods.markAsFailed = function(errorMessage) {\n    this.status = 'failed';\n    this.errorMessage = errorMessage;\n    this.retryCount += 1;\n    return this.save();\n};\nKeyTransactionSchema.methods.addMetadata = function(key, value) {\n    if (!this.metadata) this.metadata = {};\n    this.metadata[key] = value;\n    return this.save();\n};\n// Static methods\nKeyTransactionSchema.statics.getRecentActivity = function(limit = 50) {\n    return this.find().populate('keyId', 'name labName labNumber').populate('facultyId', 'name email').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getFacultyHistory = function(facultyId, limit = 100) {\n    return this.find({\n        facultyId\n    }).populate('keyId', 'name labName labNumber').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getKeyHistory = function(keyId, limit = 100) {\n    return this.find({\n        keyId\n    }).populate('facultyId', 'name email').populate('securityPersonnelId', 'name').sort({\n        timestamp: -1\n    }).limit(limit);\n};\nKeyTransactionSchema.statics.getDepartmentActivity = function(department, startDate, endDate) {\n    return this.aggregate([\n        {\n            $lookup: {\n                from: 'keys',\n                localField: 'keyId',\n                foreignField: '_id',\n                as: 'key'\n            }\n        },\n        {\n            $match: {\n                'key.department': department,\n                timestamp: {\n                    $gte: startDate,\n                    $lte: endDate\n                }\n            }\n        },\n        {\n            $group: {\n                _id: '$type',\n                count: {\n                    $sum: 1\n                },\n                latestActivity: {\n                    $max: '$timestamp'\n                }\n            }\n        }\n    ]);\n};\nKeyTransactionSchema.statics.getUsageStats = function(startDate, endDate) {\n    return this.aggregate([\n        {\n            $match: {\n                timestamp: {\n                    $gte: startDate,\n                    $lte: endDate\n                }\n            }\n        },\n        {\n            $group: {\n                _id: {\n                    date: {\n                        $dateToString: {\n                            format: \"%Y-%m-%d\",\n                            date: \"$timestamp\"\n                        }\n                    },\n                    type: \"$type\"\n                },\n                count: {\n                    $sum: 1\n                }\n            }\n        },\n        {\n            $group: {\n                _id: \"$_id.date\",\n                activities: {\n                    $push: {\n                        type: \"$_id.type\",\n                        count: \"$count\"\n                    }\n                },\n                totalCount: {\n                    $sum: \"$count\"\n                }\n            }\n        },\n        {\n            $sort: {\n                _id: 1\n            }\n        }\n    ]);\n};\n// Pre-save middleware\nKeyTransactionSchema.pre('save', function(next) {\n    // Auto-generate details if not provided\n    if (!this.details) {\n        this.details = generateDefaultDetails(this.type);\n    }\n    next();\n});\n// Post-save middleware for notifications\nKeyTransactionSchema.post('save', async function(doc) {\n    // Send notifications for important events\n    if ([\n        'overdue_reminder',\n        'shared',\n        'collected'\n    ].includes(doc.type)) {\n        // Trigger notification system\n        console.log(`Transaction logged: ${doc.type} for key ${doc.keyId}`);\n    }\n});\n// Helper functions\nfunction getRelativeTime(date) {\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return `${Math.floor(diffInMinutes / 1440)}d ago`;\n}\nfunction generateDefaultDetails(type) {\n    const defaultDetails = {\n        requested: 'Key access requested',\n        approved: 'Key request approved',\n        rejected: 'Key request rejected',\n        collected: 'Key collected from security desk',\n        returned: 'Key returned to security desk',\n        shared: 'Key access shared with another faculty',\n        share_revoked: 'Key sharing access revoked',\n        overdue_reminder: 'Overdue reminder sent'\n    };\n    return defaultDetails[type] || 'Key transaction';\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).KeyTransaction || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('KeyTransaction', KeyTransactionSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/KeyTransaction.js\n");

/***/ }),

/***/ "(rsc)/./models/User.js":
/*!************************!*\
  !*** ./models/User.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    email: {\n        type: String,\n        required: true,\n        unique: true,\n        lowercase: true,\n        trim: true,\n        match: [\n            /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n            'Please enter a valid email address'\n        ]\n    },\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    employeeId: {\n        type: String,\n        required: true,\n        unique: true,\n        trim: true\n    },\n    role: {\n        type: String,\n        required: true,\n        enum: [\n            'faculty',\n            'hod',\n            'security',\n            'security_head',\n            'admin'\n        ],\n        default: 'faculty'\n    },\n    department: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    image: {\n        type: String,\n        default: null\n    },\n    googleId: {\n        type: String,\n        default: null\n    },\n    password: {\n        type: String,\n        default: null\n    },\n    profileImage: {\n        type: String,\n        default: null\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    lastLogin: {\n        type: Date,\n        default: null\n    },\n    passwordResetRequired: {\n        type: Boolean,\n        default: false\n    },\n    createdBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        default: null\n    },\n    deletedAt: {\n        type: Date,\n        default: null\n    },\n    deletedBy: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.ObjectId,\n        ref: 'User',\n        default: null\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    updatedAt: {\n        type: Date,\n        default: Date.now\n    }\n}, {\n    timestamps: true\n});\n// Indexes for better performance\n// Note: email and employeeId indexes are automatically created due to unique: true\nuserSchema.index({\n    role: 1\n});\nuserSchema.index({\n    department: 1\n});\nuserSchema.index({\n    googleId: 1\n});\nuserSchema.index({\n    isActive: 1\n});\nuserSchema.index({\n    createdAt: -1\n});\n// Pre-save middleware to update the updatedAt field\nuserSchema.pre('save', function(next) {\n    this.updatedAt = new Date();\n    next();\n});\n// Instance methods\nuserSchema.methods.toJSON = function() {\n    const user = this.toObject();\n    delete user.__v;\n    return user;\n};\nuserSchema.methods.updateLastLogin = function() {\n    this.lastLogin = new Date();\n    return this.save();\n};\n// Static methods\nuserSchema.statics.findByEmail = function(email) {\n    return this.findOne({\n        email: email.toLowerCase()\n    });\n};\nuserSchema.statics.findByEmployeeId = function(employeeId) {\n    return this.findOne({\n        employeeId\n    });\n};\nuserSchema.statics.findByRole = function(role) {\n    return this.find({\n        role,\n        isActive: true\n    });\n};\nuserSchema.statics.findByDepartment = function(department) {\n    return this.find({\n        department,\n        isActive: true\n    });\n};\nuserSchema.statics.findByGoogleId = function(googleId) {\n    return this.findOne({\n        googleId\n    });\n};\n// Virtual for full name (if needed)\nuserSchema.virtual('displayName').get(function() {\n    return this.name;\n});\nconst User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('User', userSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./models/User.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsecurity%2Fscan%2Froute&page=%2Fapi%2Fsecurity%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsecurity%2Fscan%2Froute.js&appDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsecurity%2Fscan%2Froute&page=%2Fapi%2Fsecurity%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsecurity%2Fscan%2Froute.js&appDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_new_Innovation_key_management_app_api_security_scan_route_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/security/scan/route.js */ \"(rsc)/./app/api/security/scan/route.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/security/scan/route\",\n        pathname: \"/api/security/scan\",\n        filename: \"route\",\n        bundlePath: \"app/api/security/scan/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/new/Innovation/key-management/app/api/security/scan/route.js\",\n    nextConfigOutput,\n    userland: _Users_new_Innovation_key_management_app_api_security_scan_route_js__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/security/scan/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsecurity%2Fscan%2Froute&page=%2Fapi%2Fsecurity%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsecurity%2Fscan%2Froute.js&appDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/oauth","vendor-chunks/lru-cache","vendor-chunks/object-hash","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsecurity%2Fscan%2Froute&page=%2Fapi%2Fsecurity%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsecurity%2Fscan%2Froute.js&appDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnew%2FInnovation%2Fkey-management&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();